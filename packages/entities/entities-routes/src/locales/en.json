{
  "actions": {
    "create": "New route",
    "copy_id": "Copy ID",
    "copy_json": "Copy JSON",
    "edit": "Edit",
    "delete": "Delete",
    "clear": "Clear",
    "view": "View Details",
    "loading": "Loading..."
  },
  "search": {
    "placeholder": {
      "konnect": "Filter by name",
      "exact": "Filter by exact name or ID",
      "kongManager": "Filter by exact name or ID"
    },
    "no_results": "No results found"
  },
  "routes": {
    "title": "Routes",
    "list": {
      "toolbar_actions": {
        "new_route": "New route"
      },
      "table_headers": {
        "name": "Name",
        "protocols": "Protocols",
        "hosts": "Hosts",
        "methods": "Methods",
        "paths": "Paths",
        "expression": "Expression",
        "id": "ID",
        "tags": "Tags",
        "created_at": "Created At",
        "updated_at": "Last Modified"
      },
      "empty_state": {
        "title": "Configure a New Route",
        "description": "Routes proxy requests to an associated Service."
      },
      "empty_state_v2": {
        "title": "Configure your first route",
        "group": "Routes created in gateways within this group will automatically appear here.",
        "description": "Routes direct incoming API requests to the appropriate gateway service based on paths, methods, and headers, ensuring efficient traffic flow."
      }
    }
  },
  "delete": {
    "title": "Delete a Route",
    "description": "Deleting this route will also remove any associated plugins. This action cannot be reversed."
  },
  "errors": {
    "general": "Routes could not be retrieved",
    "delete": "The route could not be deleted at this time.",
    "copy": "Failed to copy to clipboard",
    "services": {
      "fetch": "Could not fetch available services"
    }
  },
  "copy": {
    "success": "Copied {val} to clipboard",
    "success_brief": "Successfully copied to clipboard"
  },
  "form": {
    "config_flavor": {
      "label": "Define by"
    },
    "config_types": {
      "basic": {
        "description": "Quickly set up a route with HTTP & HTTPS protocol with the essentials: path, method, and host.",
        "label": "Basic"
      },
      "advanced": {
        "description": "Define complex route logic with other protocols or additional paths or attributes such as headers.",
        "label": "Advanced"
      }
    },
    "protocols": {
      "grpc": "GRPC",
      "grpcs": "GRPCS",
      "grpc,grpcs": "GRPC, GRPCS",
      "http": "HTTP",
      "https": "HTTPS",
      "http,https": "HTTP, HTTPS",
      "tls": "TLS",
      "tcp": "TCP",
      "udp": "UDP",
      "tls,udp": "TLS, UDP",
      "tcp,udp": "TCP, UDP",
      "tcp,tls": "TCP, TLS",
      "tcp,tls,udp": "TCP, TLS, UDP",
      "ws": "WS",
      "wss": "WSS",
      "ws,wss": "WS, WSS",
      "tls_passthrough": "TLS_PASSTHROUGH"
    },
    "sections": {
      "general": {
        "title": "General Information",
        "description": "General information will help you identify and manage this route"
      },
      "config": {
        "title": "Route Configuration",
        "description": "Route configuration determines how this route will handle incoming requests"
      },
      "routingRules": {
        "title": "Routing Rules"
      },
      "routingExpression": {
        "title": "Routing Expression"
      }
    },
    "fields": {
      "service_id": {
        "label": "Service",
        "placeholder": "Select a service"
      },
      "name": {
        "label": "Name",
        "placeholder": "Enter a unique name",
        "tooltip": "The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named 'test' and 'Test'."
      },
      "service": {
        "label": "Gateway Service",
        "tooltip": "The Service this Route is associated to. This is where the Route proxies traffic to."
      },
      "tags": {
        "label": "Tags",
        "tooltip": "An optional set of strings associated with the Route for grouping and filtering.",
        "placeholder": "Enter a list of tags separated by commas",
        "help": "e.g. tag1, tag2, tag3"
      },
      "protocols": {
        "label": "Protocols",
        "tooltip": "The protocols this route supports."
      },
      "path_handling": {
        "label": "Path Handling",
        "tooltip": "Controls how Kong modifies the request path before proxying to the upstream service. Use v1 for standardized, predictable path behavior. Use v0 for legacy compatibility."
      },
      "https_redirect_status_code": {
        "label": "HTTPS Redirect Status Code",
        "tooltip": "Specifies the HTTP status code for redirecting requests from HTTP to HTTPS. Use `301` or `308` for permanent redirects, `302` or `307` for temporary redirects."
      },
      "regex_priority": {
        "label": "Regex Priority",
        "tooltip": "Regex priority is determined by length first (longer patterns win), and when lengths are the same, more specific regexes are preferred.  When two routes match the path and have the same regex_priority, the older one (lowest created_at) is used."
      },
      "strip_path": {
        "label": "Strip Path",
        "tooltip": "When enabled, Kong removes the portion of the request path that matches the route's path before forwarding the request to the upstream. If the request exactly matches the route, the result is `/`. Disable if that's not desired."
      },
      "preserve_host": {
        "label": "Preserve Host",
        "tooltip": "Keeps the original `Host` header when proxying requests. Enable this if the upstream service requires the client's `Host` value. Disable if the service expects its own hostname."
      },
      "paths": {
        "add": "Add a path",
        "label": "Paths",
        "label_singular": "Path",
        "placeholder": "e.g. /api/v1",
        "singular": "path",
        "tooltip": "Match specific URL paths, such as /api/v1. Prefix with ~ to enable regex-based matching."
      },
      "snis": {
        "add": "Add an SNI",
        "label": "SNIs",
        "placeholder": "e.g. api.example.com",
        "singular": "SNI",
        "tooltip": "SNIs (Server Name Indications) that match the route when using stream routing."
      },
      "hosts": {
        "add": "Add a host",
        "label": "Hosts",
        "label_singular": "Host",
        "placeholder": "e.g. example.com",
        "singular": "host",
        "tooltip": "Match specific domain names, such as `api.example.com`. Prefix with `~` to enable regex-based matching."
      },
      "methods": {
        "label": "Methods",
        "placeholder": "Select methods",
        "search_placeholder": "Search for a method or enter a custom method",
        "singular": "method",
        "tooltip": "Match specific HTTP methods, such as GET or POST. If no method is selected, all methods are included.",
        "custom": {
          "label": "Custom",
          "placeholder": "Enter a custom method",
          "tooltip": "Custom methods can be used with default selections. Uppercase characters are required."
        }
      },
      "headers": {
        "add": "Add a header",
        "label": "Headers",
        "singular": "header",
        "tooltip": "Match specific headers, such as x-api-version or x-region. Doesn't accept the Host header. Provide only one entry and prefix with ~ to enable regex-based matching.",
        "name": {
          "placeholder": "e.g. x-api-version"
        },
        "values": {
          "placeholder": "e.g. v1"
        }
      },
      "sources": {
        "add": "Add a source",
        "label": "Sources",
        "singular": "source",
        "tooltip": "A list of IP sources of incoming connections that match this Route when using stream routing.",
        "ip": {
          "placeholder": "Enter a source IP"
        },
        "port": {
          "placeholder": "Enter a source port"
        }
      },
      "destinations": {
        "add": "Add a destination",
        "label": "Destinations",
        "singular": "destination",
        "tooltip": "A list of IP destinations of incoming connections that match this Route when using stream routing.",
        "ip": {
          "placeholder": "Enter a destination IP"
        },
        "port": {
          "placeholder": "Enter a destination port"
        }
      },
      "response_buffering": {
        "label": "Response buffering",
        "tooltip": "Reads and buffers the full response from the upstream service before sending it to the client. Enable buffering if the client expects the complete response at once. Disable for faster streaming of large or chunked responses."
      },
      "request_buffering": {
        "label": "Request buffering",
        "tooltip": "Reads and buffers the full request body before proxying. Enable buffering if the upstream service requires the complete request before processing. Disable for faster streaming of large or chunked requests."
      },
      "expression": {
        "label": "Expression",
        "tooltip": "The route expression."
      },
      "priority": {
        "label": "Priority",
        "tooltip": "A number used to choose which route resolves a given request when several routes match it using expression simultaneously."
      }
    },
    "flavors": {
      "traditional": "Traditional Form",
      "expressions": "Expressions Editor"
    },
    "show_more": "Show more",
    "hint": {
      "rules_message": "Choose at least one {routingRules} option.",
      "single_rule": "{routingRules}",
      "multiple_rules": "{routingRules} or {lastRoutingRule}",
      "advanced": "To add more than one, use the Advanced options."
    },
    "warning": {
      "cannotChangeFlavor": {
        "create": "The format of the route cannot be changed once created.",
        "edit": "This route was configured in the {format} format, and cannot be changed after creation. You can switch to the {format} tab to edit, or create a new route in a different format instead."
      }
    },
    "expressions_editor": {
      "loading": "Loading the Expressions editor…",
      "error": "Error occurred while loading the Expressions editor. Please view the console for more details."
    },
    "expression_playground": {
      "test_link": "Test with Router Playground",
      "supported_protocols_hint": "Currently only supports the following protocols: {protocols}"
    }
  }
}
