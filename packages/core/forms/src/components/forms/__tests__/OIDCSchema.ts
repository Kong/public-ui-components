export const OIDCFormSchema = {
  fields: [
    {
      'default': 'openid-connect',
      'type': 'input',
      'inputType': 'hidden',
      'styleClasses': 'd-none hidden-field',
      'pinned': true,
      'id': 'name',
      'model': 'name',
      'label': '',
      'order': 0,
    },
    {
      'type': 'switch',
      'model': 'enabled',
      'label': 'Enabled',
      'textOn': 'This plugin is Enabled',
      'textOff': 'This plugin is Disabled',
      'styleClasses': 'field-switch hide-label',
      'default': true,
      'pinned': true,
      'id': 'enabled',
      'order': 0,
    },
    {
      'type': 'selectionGroup',
      'disabled': false,
      'inputType': 'hidden',
      'styleClasses': 'hide-label',
      'fields': [
        {
          'label': 'Global',
          'description': 'All services, routes, and consumers',
        },
        {
          'label': 'Scoped',
          'description': 'Specific Gateway Services and/or Routes',
          'fields': [
            {
              'id': 'service-id',
              'model': 'service-id',
              'label': 'Gateway Service',
              'placeholder': 'Select a Gateway Service',
              'type': 'AutoSuggest',
              'entity': 'services',
              'inputValues': {
                'fields': [
                  'name',
                  'id',
                ],
              },
              'help': 'The Gateway Service to which this plugin configuration will apply',
              'disabled': false,
            },
            {
              'id': 'route-id',
              'model': 'route-id',
              'label': 'Route',
              'placeholder': 'Select a Route',
              'type': 'AutoSuggest',
              'entity': 'routes',
              'inputValues': {
                'fields': [
                  'name',
                  'id',
                ],
                'primaryField': 'id',
              },
              'help': 'The Route that this Plugin configuration will target',
              'disabled': false,
            },
          ],
        },
      ],
      'pinned': true,
      'id': 'selectionGroup',
      'model': 'selectionGroup',
      'label': '',
      'order': 0,
    },
    {
      'id': 'protocols',
      'default': [
        'grpc',
        'grpcs',
        'http',
        'https',
      ],
      'help': 'A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type.',
      'label': 'Protocols',
      'required': true,
      'styleClasses': 'plugin-protocols-select',
      'type': 'multiselect',
      'values': [
        {
          'label': 'grpc',
          'value': 'grpc',
        },
        {
          'label': 'grpcs',
          'value': 'grpcs',
        },
        {
          'label': 'http',
          'value': 'http',
        },
        {
          'label': 'https',
          'value': 'https',
        },
      ],
      'placeholder': 'Select valid protocols for the plugin. Default protocols: grpc, grpcs, http, https',
      'model': 'protocols',
      'order': 0,
    },
    {
      'default': '',
      'type': 'input',
      'label': 'Instance Name',
      'inputType': 'text',
      'help': 'A custom name for this plugin instance to help identifying from the list view.',
      'id': 'instance_name',
      'model': 'instance_name',
      'order': 0,
    },
    {
      'label': 'Tags',
      'name': 'tags',
      'type': 'input',
      'inputType': 'text',
      'valueType': 'array',
      'valueArrayType': 'string',
      'placeholder': 'Enter list of tags',
      'help': 'An optional set of strings for grouping and filtering, separated by commas.',
      'hint': 'e.g. tag1, tag2, tag3',
      'id': 'tags',
      'model': 'tags',
      'order': 0,
    },
    {
      'id': 'config-anonymous',
      'model': 'config-anonymous',
      'type': 'input',
      'required': false,
      'label': 'Config.Anonymous',
      'help': '<p>An optional string (consumer UUID or username) value that functions as an “anonymous” consumer if authentication fails. If empty (default null), requests that fail authentication will return a <code>4xx</code> HTTP status code. This value must refer to the consumer <code>id</code> or <code>username</code> attribute, and <strong>not</strong> its <code>custom_id</code>.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-audience',
      'help': '<p>The audience passed to the authorization endpoint.</p>\n',
      'label': 'Config.Audience',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-audience',
      'order': 0,
    },
    {
      'id': 'config-audience_claim',
      'help': '<p>The claim that contains the audience. If multiple values are set, it means the claim is inside a nested object of the token payload.</p>\n',
      'label': 'Config.Audience Claim',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'default': [
        'aud',
      ],
      'model': 'config-audience_claim',
      'order': 0,
    },
    {
      'id': 'config-audience_required',
      'help': '<p>The audiences (<code>audience_claim</code> claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both <strong>AND</strong> / <strong>OR</strong> cases.</p>\n',
      'label': 'Config.Audience Required',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-audience_required',
      'order': 0,
    },
    {
      'id': 'config-auth_methods',
      'model': 'config-auth_methods',
      'type': 'input',
      'required': false,
      'label': 'Config.Auth Methods',
      'help': '<p>Types of credentials/grants to enable.</p>\n',
      'elements': {
        'one_of': [
          'password',
          'client_credentials',
          'authorization_code',
          'bearer',
          'introspection',
          'userinfo',
          'kong_oauth2',
          'refresh_token',
          'session',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'password',
        'client_credentials',
        'authorization_code',
        'bearer',
        'introspection',
        'userinfo',
        'kong_oauth2',
        'refresh_token',
        'session',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-authenticated_groups_claim',
      'help': '<p>The claim that contains authenticated groups. This setting can be used together with ACL plugin, but it also enables IdP managed groups with other applications and integrations. If multiple values are set, it means the claim is inside a nested object of the token payload.</p>\n',
      'label': 'Config.Authenticated Groups Claim',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-authenticated_groups_claim',
      'order': 0,
    },
    {
      'id': 'config-authorization_cookie_domain',
      'model': 'config-authorization_cookie_domain',
      'type': 'input',
      'required': false,
      'label': 'Config.Authorization Cookie Domain',
      'help': '<p>The authorization cookie Domain flag.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-authorization_cookie_http_only',
      'model': 'config-authorization_cookie_http_only',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Authorization Cookie Http Only',
      'help': '<p>Forbids JavaScript from accessing the cookie, for example, through the <code>Document.cookie</code> property.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-authorization_cookie_name',
      'model': 'config-authorization_cookie_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Authorization Cookie Name',
      'help': '<p>The authorization cookie name.</p>\n',
      'default': 'authorization',
      'placeholder': 'Default: authorization',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-authorization_cookie_path',
      'model': 'config-authorization_cookie_path',
      'type': 'input',
      'required': false,
      'label': 'Config.Authorization Cookie Path',
      'help': '<p>The authorization cookie Path flag.</p>\n',
      'default': '/',
      'placeholder': 'Default: /',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-authorization_cookie_same_site',
      'model': 'config-authorization_cookie_same_site',
      'type': 'select',
      'required': false,
      'label': 'Config.Authorization Cookie Same Site',
      'help': '<p>Controls whether a cookie is sent with cross-origin requests, providing some protection against cross-site request forgery attacks.</p>\n',
      'values': [
        'Strict',
        'Lax',
        'None',
        'Default',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'Default',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-authorization_cookie_secure',
      'model': 'config-authorization_cookie_secure',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Authorization Cookie Secure',
      'help': '<p>Cookie is only sent to the server when a request is made with the https: scheme (except on localhost), and therefore is more resistant to man-in-the-middle attacks.</p>\n',
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-authorization_endpoint',
      'model': 'config-authorization_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Authorization Endpoint',
      'help': '<p>The authorization endpoint. If set it overrides the value in <code>authorization_endpoint</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-authorization_query_args_client',
      'help': '<p>Extra query arguments passed from the client to the authorization endpoint.</p>\n',
      'label': 'Config.Authorization Query Args Client',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-authorization_query_args_client',
      'order': 0,
    },
    {
      'id': 'config-authorization_query_args_names',
      'help': '<p>Extra query argument names passed to the authorization endpoint.</p>\n',
      'label': 'Config.Authorization Query Args Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-authorization_query_args_names',
      'order': 0,
    },
    {
      'id': 'config-authorization_query_args_values',
      'help': '<p>Extra query argument values passed to the authorization endpoint.</p>\n',
      'label': 'Config.Authorization Query Args Values',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-authorization_query_args_values',
      'order': 0,
    },
    {
      'id': 'config-authorization_rolling_timeout',
      'model': 'config-authorization_rolling_timeout',
      'type': 'input',
      'required': false,
      'label': 'Config.Authorization Rolling Timeout',
      'help': '<p>Specifies how long the session used for the authorization code flow can be used in seconds until it needs to be renewed. 0 disables the checks and rolling.</p>\n',
      'default': 600,
      'placeholder': 'Default: 600',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-bearer_token_cookie_name',
      'model': 'config-bearer_token_cookie_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Bearer Token Cookie Name',
      'help': '<p>The name of the cookie in which the bearer token is passed.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-bearer_token_param_type',
      'model': 'config-bearer_token_param_type',
      'type': 'input',
      'required': false,
      'label': 'Config.Bearer Token Param Type',
      'help': '<p>Where to look for the bearer token: - <code>header</code>: search the <code>Authorization</code>, <code>access-token</code>, and <code>x-access-token</code> HTTP headers - <code>query</code>: search the URL&#39;s query string - <code>body</code>: search the HTTP request body - <code>cookie</code>: search the HTTP request cookies specified with <code>config.bearer_token_cookie_name</code>.</p>\n',
      'elements': {
        'one_of': [
          'header',
          'cookie',
          'query',
          'body',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'header',
        'query',
        'body',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-by_username_ignore_case',
      'model': 'config-by_username_ignore_case',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.By Username Ignore Case',
      'help': '<p>If <code>consumer_by</code> is set to <code>username</code>, specify whether <code>username</code> can match consumers case-insensitively.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-cache_introspection',
      'model': 'config-cache_introspection',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Cache Introspection',
      'help': '<p>Cache the introspection endpoint requests.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-cache_token_exchange',
      'model': 'config-cache_token_exchange',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Cache Token Exchange',
      'help': '<p>Cache the token exchange endpoint requests.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-cache_tokens',
      'model': 'config-cache_tokens',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Cache Tokens',
      'help': '<p>Cache the token endpoint requests.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-cache_tokens_salt',
      'model': 'config-cache_tokens_salt',
      'type': 'input',
      'required': false,
      'label': 'Config.Cache Tokens Salt',
      'help': '<p>Salt used for generating the cache key that is used for caching the token endpoint requests.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-cache_ttl',
      'model': 'config-cache_ttl',
      'type': 'input',
      'required': false,
      'label': 'Config.Cache Ttl',
      'help': '<p>The default cache ttl in seconds that is used in case the cached object does not specify the expiry.</p>\n',
      'default': 3600,
      'placeholder': 'Default: 3600',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cache_ttl_max',
      'model': 'config-cache_ttl_max',
      'type': 'input',
      'required': false,
      'label': 'Config.Cache Ttl Max',
      'help': '<p>The maximum cache ttl in seconds (enforced).</p>\n',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cache_ttl_min',
      'model': 'config-cache_ttl_min',
      'type': 'input',
      'required': false,
      'label': 'Config.Cache Ttl Min',
      'help': '<p>The minimum cache ttl in seconds (enforced).</p>\n',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cache_ttl_neg',
      'model': 'config-cache_ttl_neg',
      'type': 'input',
      'required': false,
      'label': 'Config.Cache Ttl Neg',
      'help': '<p>The negative cache ttl in seconds.</p>\n',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cache_ttl_resurrect',
      'model': 'config-cache_ttl_resurrect',
      'type': 'input',
      'required': false,
      'label': 'Config.Cache Ttl Resurrect',
      'help': '<p>The resurrection ttl in seconds.</p>\n',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cache_user_info',
      'model': 'config-cache_user_info',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Cache User Info',
      'help': '<p>Cache the user info requests.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-claims_forbidden',
      'help': '<p>If given, these claims are forbidden in the token payload.</p>\n',
      'label': 'Config.Claims Forbidden',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-claims_forbidden',
      'order': 0,
    },
    {
      'id': 'config-client_alg',
      'model': 'config-client_alg',
      'type': 'input',
      'required': false,
      'label': 'Config.Client Alg',
      'help': '<p>The algorithm to use for client_secret_jwt (only HS***) or private_key_jwt authentication.</p>\n',
      'elements': {
        'one_of': [
          'HS256',
          'HS384',
          'HS512',
          'RS256',
          'RS384',
          'RS512',
          'ES256',
          'ES384',
          'ES512',
          'PS256',
          'PS384',
          'PS512',
          'EdDSA',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-client_arg',
      'model': 'config-client_arg',
      'type': 'input',
      'required': false,
      'label': 'Config.Client Arg',
      'help': '<p>The client to use for this request (the selection is made with a request parameter with the same name).</p>\n',
      'default': 'client_id',
      'placeholder': 'Default: client_id',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-client_auth',
      'model': 'config-client_auth',
      'type': 'input',
      'required': false,
      'label': 'Config.Client Auth',
      'help': '<p>The default OpenID Connect client authentication method is &#39;client_secret_basic&#39; (using &#39;Authorization: Basic&#39; header), &#39;client_secret_post&#39; (credentials in body), &#39;client_secret_jwt&#39; (signed client assertion in body), &#39;private_key_jwt&#39; (private key-signed assertion), &#39;tls_client_auth&#39; (client certificate), &#39;self_signed_tls_client_auth&#39; (self-signed client certificate), and &#39;none&#39; (no authentication).</p>\n',
      'elements': {
        'one_of': [
          'client_secret_basic',
          'client_secret_post',
          'client_secret_jwt',
          'private_key_jwt',
          'tls_client_auth',
          'self_signed_tls_client_auth',
          'none',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-client_credentials_param_type',
      'model': 'config-client_credentials_param_type',
      'type': 'input',
      'required': false,
      'label': 'Config.Client Credentials Param Type',
      'help': '<p>Where to look for the client credentials: - <code>header</code>: search the HTTP headers - <code>query</code>: search the URL&#39;s query string - <code>body</code>: search from the HTTP request body.</p>\n',
      'elements': {
        'one_of': [
          'header',
          'query',
          'body',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'header',
        'query',
        'body',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-client_id',
      'help': '<p>The client id(s) that the plugin uses when it calls authenticated endpoints on the identity provider.</p>\n',
      'label': 'Config.Client Id',
      'referenceable': true,
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-client_id',
      'order': 0,
    },
    {
      'id': 'config-client_jwk',
      'model': 'config-client_jwk',
      'type': 'array',
      'required': false,
      'label': 'Config.Client Jwk',
      'help': '<p>The JWK used for the private_key_jwt authentication.</p>\n',
      'elements': {
        'fields': [
          {
            'issuer': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'kty': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'use': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'key_ops': {
              'elements': {
                'required': false,
                'type': 'string',
              },
              'required': false,
              'type': 'array',
            },
          },
          {
            'alg': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'kid': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'x5u': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'x5c': {
              'elements': {
                'required': false,
                'type': 'string',
              },
              'required': false,
              'type': 'array',
            },
          },
          {
            'x5t': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'x5t#S256': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'k': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
          {
            'x': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'y': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'crv': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'n': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'e': {
              'required': false,
              'type': 'string',
            },
          },
          {
            'd': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
          {
            'p': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
          {
            'q': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
          {
            'dp': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
          {
            'dq': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
          {
            'qi': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
          {
            'oth': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
          {
            'r': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
          {
            't': {
              'encrypted': true,
              'referenceable': true,
              'required': false,
              'type': 'string',
            },
          },
        ],
        'required': false,
        'type': 'record',
      },
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'fieldClasses': 'array-card-container-wrapper',
      'itemContainerComponent': 'FieldArrayCardContainer',
      'items': {
        'type': 'object',
        'schema': {
          'fields': [
            {
              'id': 'config-client_jwk-alg',
              'model': 'alg',
              'type': 'input',
              'required': false,
              'label': 'alg',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-crv',
              'model': 'crv',
              'type': 'input',
              'required': false,
              'label': 'crv',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-d',
              'model': 'd',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 'd',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-dp',
              'model': 'dp',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 'dp',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-dq',
              'model': 'dq',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 'dq',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-e',
              'model': 'e',
              'type': 'input',
              'required': false,
              'label': 'e',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-issuer',
              'model': 'issuer',
              'type': 'input',
              'required': false,
              'label': 'issuer',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-k',
              'model': 'k',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 'k',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-key_ops',
              'label': 'key_ops',
              'inputAttributes': {
                'class': 'form-control',
                'style': {
                  'minWidth': '200px',
                },
                'type': 'text',
              },
              'type': 'array',
              'valueType': 'array',
              'valueArrayType': 'array',
              'itemContainerComponent': 'FieldArrayItem',
              'fieldClasses': 'kong-form-array-field',
              'fieldItemsClasses': 'kong-form-array-field-item',
              'validator': 'array',
              'styleClasses': 'kong-form-field-wrapper',
              'newElementButtonLabel': '+ Add',
              'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
              'model': 'key_ops',
            },
            {
              'id': 'config-client_jwk-kid',
              'model': 'kid',
              'type': 'input',
              'required': false,
              'label': 'kid',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-kty',
              'model': 'kty',
              'type': 'input',
              'required': false,
              'label': 'kty',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-n',
              'model': 'n',
              'type': 'input',
              'required': false,
              'label': 'n',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-oth',
              'model': 'oth',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 'oth',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-p',
              'model': 'p',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 'p',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-q',
              'model': 'q',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 'q',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-qi',
              'model': 'qi',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 'qi',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-r',
              'model': 'r',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 'r',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-t',
              'model': 't',
              'type': 'input',
              'required': false,
              'referenceable': true,
              'label': 't',
              'inputType': 'password',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-use',
              'model': 'use',
              'type': 'input',
              'required': false,
              'label': 'use',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-x',
              'model': 'x',
              'type': 'input',
              'required': false,
              'label': 'x',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-x5c',
              'label': 'x5c',
              'inputAttributes': {
                'class': 'form-control',
                'style': {
                  'minWidth': '200px',
                },
                'type': 'text',
              },
              'type': 'array',
              'valueType': 'array',
              'valueArrayType': 'array',
              'itemContainerComponent': 'FieldArrayItem',
              'fieldClasses': 'kong-form-array-field',
              'fieldItemsClasses': 'kong-form-array-field-item',
              'validator': 'array',
              'styleClasses': 'kong-form-field-wrapper',
              'newElementButtonLabel': '+ Add',
              'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
              'model': 'x5c',
            },
            {
              'id': 'config-client_jwk-x5t',
              'model': 'x5t',
              'type': 'input',
              'required': false,
              'label': 'x5t',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-x5t#S256',
              'model': 'x5t#S256',
              'type': 'input',
              'required': false,
              'label': 'x5t#S256',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-x5u',
              'model': 'x5u',
              'type': 'input',
              'required': false,
              'label': 'x5u',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-client_jwk-y',
              'model': 'y',
              'type': 'input',
              'required': false,
              'label': 'y',
              'inputType': 'text',
              'valueType': 'string',
            },
          ],
        },
      },
      'nestedFields': true,
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-client_secret',
      'help': '<p>The client secret.</p>\n',
      'label': 'Config.Client Secret',
      'referenceable': true,
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-client_secret',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-cluster_max_redirections',
      'model': 'config-cluster_cache_redis-cluster_max_redirections',
      'type': 'input',
      'required': false,
      'label': 'Config.Cluster Cache Redis.Cluster Max Redirections',
      'help': '<p>Maximum retry attempts for redirection.</p>\n',
      'default': 5,
      'placeholder': 'Default: 5',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-cluster_nodes',
      'model': 'config-cluster_cache_redis-cluster_nodes',
      'type': 'array',
      'required': false,
      'label': 'Config.Cluster Cache Redis.Cluster Nodes',
      'help': '<p>Cluster addresses to use for Redis connections when the <code>redis</code> strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.</p>\n',
      'elements': {
        'fields': [
          {
            'ip': {
              'default': '127.0.0.1',
              'description': 'A string representing a host name, such as example.com.',
              'required': true,
              'type': 'string',
            },
          },
          {
            'port': {
              'between': [
                0,
                65535,
              ],
              'default': 6379,
              'description': 'An integer representing a port number between 0 and 65535, inclusive.',
              'type': 'integer',
            },
          },
        ],
        'type': 'record',
      },
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'fieldClasses': 'array-card-container-wrapper',
      'itemContainerComponent': 'FieldArrayCardContainer',
      'items': {
        'type': 'object',
        'schema': {
          'fields': [
            {
              'id': 'config-cluster_cache_redis-cluster_nodes-ip',
              'model': 'ip',
              'type': 'input',
              'required': true,
              'label': 'Ip',
              'help': '<p>A string representing a host name, such as example.com.</p>\n',
              'selectOptions': {
                'hideNoneSelectedText': true,
              },
              'default': '127.0.0.1',
              'placeholder': 'Default: 127.0.0.1',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-cluster_cache_redis-cluster_nodes-port',
              'model': 'port',
              'type': 'input',
              'label': 'Port',
              'help': '<p>An integer representing a port number between 0 and 65535, inclusive.</p>\n',
              'default': 6379,
              'placeholder': 'Default: 6379',
              'inputType': 'number',
              'valueType': 'number',
            },
          ],
        },
      },
      'nestedFields': true,
      'submitWhenNull': true,
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-connect_timeout',
      'model': 'config-cluster_cache_redis-connect_timeout',
      'type': 'input',
      'label': 'Config.Cluster Cache Redis.Connect Timeout',
      'help': '<p>An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.</p>\n',
      'default': 2000,
      'placeholder': 'Default: 2000',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-connection_is_proxied',
      'model': 'config-cluster_cache_redis-connection_is_proxied',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Cluster Cache Redis.Connection Is Proxied',
      'help': '<p>If the connection to Redis is proxied (e.g. Envoy), set it <code>true</code>. Set the <code>host</code> and <code>port</code> to point to the proxy address.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-database',
      'model': 'config-cluster_cache_redis-database',
      'type': 'input',
      'label': 'Config.Cluster Cache Redis.Database',
      'help': '<p>Database to use for the Redis connection when using the <code>redis</code> strategy</p>\n',
      'default': 0,
      'placeholder': 'Default: 0',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-host',
      'model': 'config-cluster_cache_redis-host',
      'type': 'input',
      'label': 'Config.Cluster Cache Redis.Host',
      'help': '<p>A string representing a host name, such as example.com.</p>\n',
      'default': '127.0.0.1',
      'placeholder': 'Default: 127.0.0.1',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-keepalive_backlog',
      'model': 'config-cluster_cache_redis-keepalive_backlog',
      'type': 'input',
      'label': 'Config.Cluster Cache Redis.Keepalive Backlog',
      'help': '<p>Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return <code>nil</code>. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than <code>keepalive_pool_size</code>. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than <code>keepalive_pool_size</code>.</p>\n',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-keepalive_pool_size',
      'model': 'config-cluster_cache_redis-keepalive_pool_size',
      'type': 'input',
      'label': 'Config.Cluster Cache Redis.Keepalive Pool Size',
      'help': '<p>The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither <code>keepalive_pool_size</code> nor <code>keepalive_backlog</code> is specified, no pool is created. If <code>keepalive_pool_size</code> isn&#39;t specified but <code>keepalive_backlog</code> is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.</p>\n',
      'default': 256,
      'placeholder': 'Default: 256',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-password',
      'model': 'config-cluster_cache_redis-password',
      'type': 'input',
      'referenceable': true,
      'label': 'Config.Cluster Cache Redis.Password',
      'help': '<p>Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.</p>\n',
      'inputType': 'password',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-port',
      'model': 'config-cluster_cache_redis-port',
      'type': 'input',
      'label': 'Config.Cluster Cache Redis.Port',
      'help': '<p>An integer representing a port number between 0 and 65535, inclusive.</p>\n',
      'default': 6379,
      'placeholder': 'Default: 6379',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-read_timeout',
      'model': 'config-cluster_cache_redis-read_timeout',
      'type': 'input',
      'label': 'Config.Cluster Cache Redis.Read Timeout',
      'help': '<p>An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.</p>\n',
      'default': 2000,
      'placeholder': 'Default: 2000',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-send_timeout',
      'model': 'config-cluster_cache_redis-send_timeout',
      'type': 'input',
      'label': 'Config.Cluster Cache Redis.Send Timeout',
      'help': '<p>An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.</p>\n',
      'default': 2000,
      'placeholder': 'Default: 2000',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-sentinel_master',
      'model': 'config-cluster_cache_redis-sentinel_master',
      'type': 'input',
      'label': 'Config.Cluster Cache Redis.Sentinel Master',
      'help': '<p>Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-sentinel_nodes',
      'model': 'config-cluster_cache_redis-sentinel_nodes',
      'type': 'array',
      'required': false,
      'label': 'Config.Cluster Cache Redis.Sentinel Nodes',
      'help': '<p>Sentinel node addresses to use for Redis connections when the <code>redis</code> strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.</p>\n',
      'elements': {
        'fields': [
          {
            'host': {
              'default': '127.0.0.1',
              'description': 'A string representing a host name, such as example.com.',
              'required': true,
              'type': 'string',
            },
          },
          {
            'port': {
              'between': [
                0,
                65535,
              ],
              'default': 6379,
              'description': 'An integer representing a port number between 0 and 65535, inclusive.',
              'type': 'integer',
            },
          },
        ],
        'type': 'record',
      },
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'fieldClasses': 'array-card-container-wrapper',
      'itemContainerComponent': 'FieldArrayCardContainer',
      'items': {
        'type': 'object',
        'schema': {
          'fields': [
            {
              'id': 'config-cluster_cache_redis-sentinel_nodes-host',
              'model': 'host',
              'type': 'input',
              'required': true,
              'label': 'Host',
              'help': '<p>A string representing a host name, such as example.com.</p>\n',
              'selectOptions': {
                'hideNoneSelectedText': true,
              },
              'default': '127.0.0.1',
              'placeholder': 'Default: 127.0.0.1',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-cluster_cache_redis-sentinel_nodes-port',
              'model': 'port',
              'type': 'input',
              'label': 'Port',
              'help': '<p>An integer representing a port number between 0 and 65535, inclusive.</p>\n',
              'default': 6379,
              'placeholder': 'Default: 6379',
              'inputType': 'number',
              'valueType': 'number',
            },
          ],
        },
      },
      'nestedFields': true,
      'submitWhenNull': true,
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-sentinel_password',
      'model': 'config-cluster_cache_redis-sentinel_password',
      'type': 'input',
      'referenceable': true,
      'label': 'Config.Cluster Cache Redis.Sentinel Password',
      'help': '<p>Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.</p>\n',
      'inputType': 'password',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-sentinel_role',
      'model': 'config-cluster_cache_redis-sentinel_role',
      'type': 'select',
      'label': 'Config.Cluster Cache Redis.Sentinel Role',
      'help': '<p>Sentinel role to use for Redis connections when the <code>redis</code> strategy is defined. Defining this value implies using Redis Sentinel.</p>\n',
      'values': [
        'master',
        'slave',
        'any',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-sentinel_username',
      'model': 'config-cluster_cache_redis-sentinel_username',
      'type': 'input',
      'referenceable': true,
      'label': 'Config.Cluster Cache Redis.Sentinel Username',
      'help': '<p>Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won&#39;t be performed. This requires Redis v6.2.0+.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-server_name',
      'model': 'config-cluster_cache_redis-server_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Cluster Cache Redis.Server Name',
      'help': '<p>A string representing an SNI (server name indication) value for TLS.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-ssl',
      'model': 'config-cluster_cache_redis-ssl',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Cluster Cache Redis.Ssl',
      'help': '<p>If set to true, uses SSL to connect to Redis.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-ssl_verify',
      'model': 'config-cluster_cache_redis-ssl_verify',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Cluster Cache Redis.Ssl Verify',
      'help': '<p>If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure <code>lua_ssl_trusted_certificate</code> in <code>kong.conf</code> to specify the CA (or server) certificate used by your Redis server. You may also need to configure <code>lua_ssl_verify_depth</code> accordingly.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_redis-username',
      'model': 'config-cluster_cache_redis-username',
      'type': 'input',
      'referenceable': true,
      'label': 'Config.Cluster Cache Redis.Username',
      'help': '<p>Username to use for Redis connections. If undefined, ACL authentication won&#39;t be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to <code>default</code>.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-cluster_cache_strategy',
      'model': 'config-cluster_cache_strategy',
      'type': 'select',
      'required': false,
      'label': 'Config.Cluster Cache Strategy',
      'help': '<p>The strategy to use for the cluster cache. If set, the plugin will share cache with nodes configured with the same strategy backend. Currentlly only introspection cache is shared.</p>\n',
      'values': [
        'off',
        'redis',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'off',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-consumer_by',
      'model': 'config-consumer_by',
      'type': 'input',
      'required': false,
      'label': 'Config.Consumer By',
      'help': '<p>Consumer fields used for mapping: - <code>id</code>: try to find the matching Consumer by <code>id</code> - <code>username</code>: try to find the matching Consumer by <code>username</code> - <code>custom_id</code>: try to find the matching Consumer by <code>custom_id</code>.</p>\n',
      'elements': {
        'one_of': [
          'id',
          'username',
          'custom_id',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'username',
        'custom_id',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-consumer_claim',
      'help': '<p>The claim used for consumer mapping. If multiple values are set, it means the claim is inside a nested object of the token payload.</p>\n',
      'label': 'Config.Consumer Claim',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-consumer_claim',
      'order': 0,
    },
    {
      'id': 'config-consumer_optional',
      'model': 'config-consumer_optional',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Consumer Optional',
      'help': '<p>Do not terminate the request if consumer mapping fails.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-credential_claim',
      'help': '<p>The claim used to derive virtual credentials (e.g. to be consumed by the rate-limiting plugin), in case the consumer mapping is not used. If multiple values are set, it means the claim is inside a nested object of the token payload.</p>\n',
      'label': 'Config.Credential Claim',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'default': [
        'sub',
      ],
      'model': 'config-credential_claim',
      'order': 0,
    },
    {
      'id': 'config-disable_session',
      'model': 'config-disable_session',
      'type': 'input',
      'required': false,
      'label': 'Config.Disable Session',
      'help': '<p>Disable issuing the session cookie with the specified grants.</p>\n',
      'elements': {
        'one_of': [
          'password',
          'client_credentials',
          'authorization_code',
          'bearer',
          'introspection',
          'userinfo',
          'kong_oauth2',
          'refresh_token',
          'session',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-discovery_headers_names',
      'help': '<p>Extra header names passed to the discovery endpoint.</p>\n',
      'label': 'Config.Discovery Headers Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-discovery_headers_names',
      'order': 0,
    },
    {
      'id': 'config-discovery_headers_values',
      'help': '<p>Extra header values passed to the discovery endpoint.</p>\n',
      'label': 'Config.Discovery Headers Values',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-discovery_headers_values',
      'order': 0,
    },
    {
      'id': 'config-display_errors',
      'model': 'config-display_errors',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Display Errors',
      'help': '<p>Display errors on failure responses.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-domains',
      'help': '<p>The allowed values for the <code>hd</code> claim.</p>\n',
      'label': 'Config.Domains',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-domains',
      'order': 0,
    },
    {
      'id': 'config-downstream_access_token_header',
      'model': 'config-downstream_access_token_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream Access Token Header',
      'help': '<p>The downstream access token header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-downstream_access_token_jwk_header',
      'model': 'config-downstream_access_token_jwk_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream Access Token Jwk Header',
      'help': '<p>The downstream access token JWK header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-downstream_headers_claims',
      'help': '<p>The downstream header claims. If multiple values are set, it means the claim is inside a nested object of the token payload.</p>\n',
      'label': 'Config.Downstream Headers Claims',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-downstream_headers_claims',
      'order': 0,
    },
    {
      'id': 'config-downstream_headers_names',
      'help': '<p>The downstream header names for the claim values.</p>\n',
      'label': 'Config.Downstream Headers Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-downstream_headers_names',
      'order': 0,
    },
    {
      'id': 'config-downstream_id_token_header',
      'model': 'config-downstream_id_token_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream Id Token Header',
      'help': '<p>The downstream id token header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-downstream_id_token_jwk_header',
      'model': 'config-downstream_id_token_jwk_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream Id Token Jwk Header',
      'help': '<p>The downstream id token JWK header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-downstream_introspection_header',
      'model': 'config-downstream_introspection_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream Introspection Header',
      'help': '<p>The downstream introspection header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-downstream_introspection_jwt_header',
      'model': 'config-downstream_introspection_jwt_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream Introspection Jwt Header',
      'help': '<p>The downstream introspection JWT header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-downstream_refresh_token_header',
      'model': 'config-downstream_refresh_token_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream Refresh Token Header',
      'help': '<p>The downstream refresh token header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-downstream_session_id_header',
      'model': 'config-downstream_session_id_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream Session Id Header',
      'help': '<p>The downstream session id header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-downstream_user_info_header',
      'model': 'config-downstream_user_info_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream User Info Header',
      'help': '<p>The downstream user info header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-downstream_user_info_jwt_header',
      'model': 'config-downstream_user_info_jwt_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Downstream User Info Jwt Header',
      'help': '<p>The downstream user info JWT header (in case the user info returns a JWT response).</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-dpop_proof_lifetime',
      'model': 'config-dpop_proof_lifetime',
      'type': 'input',
      'required': false,
      'label': 'Config.Dpop Proof Lifetime',
      'help': '<p>Specifies the lifetime in seconds of the DPoP proof. It determines how long the same proof can be used after creation. The creation time is determined by the nonce creation time if a nonce is used, and the iat claim otherwise.</p>\n',
      'default': 300,
      'placeholder': 'Default: 300',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-dpop_use_nonce',
      'model': 'config-dpop_use_nonce',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Dpop Use Nonce',
      'help': '<p>Specifies whether to challenge the client with a nonce value for DPoP proof. When enabled it will also be used to calculate the DPoP proof lifetime.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-enable_hs_signatures',
      'model': 'config-enable_hs_signatures',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Enable Hs Signatures',
      'help': '<p>Enable shared secret, for example, HS256, signatures (when disabled they will not be accepted).</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-end_session_endpoint',
      'model': 'config-end_session_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.End Session Endpoint',
      'help': '<p>The end session endpoint. If set it overrides the value in <code>end_session_endpoint</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-expose_error_code',
      'model': 'config-expose_error_code',
      'type': 'checkbox',
      'label': 'Config.Expose Error Code',
      'help': '<p>Specifies whether to expose the error code header, as defined in RFC 6750. If an authorization request fails, this header is sent in the response. Set to <code>false</code> to disable.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-extra_jwks_uris',
      'help': '<p>JWKS URIs whose public keys are trusted (in addition to the keys found with the discovery).</p>\n',
      'label': 'Config.Extra Jwks Uris',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-extra_jwks_uris',
      'order': 0,
    },
    {
      'id': 'config-forbidden_destroy_session',
      'model': 'config-forbidden_destroy_session',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Forbidden Destroy Session',
      'help': '<p>Destroy any active session for the forbidden requests.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-forbidden_error_message',
      'model': 'config-forbidden_error_message',
      'type': 'input',
      'required': false,
      'label': 'Config.Forbidden Error Message',
      'help': '<p>The error message for the forbidden requests (when not using the redirection).</p>\n',
      'default': 'Forbidden',
      'placeholder': 'Default: Forbidden',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-forbidden_redirect_uri',
      'help': '<p>Where to redirect the client on forbidden requests.</p>\n',
      'label': 'Config.Forbidden Redirect Uri',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-forbidden_redirect_uri',
      'order': 0,
    },
    {
      'id': 'config-groups_claim',
      'help': '<p>The claim that contains the groups. If multiple values are set, it means the claim is inside a nested object of the token payload.</p>\n',
      'label': 'Config.Groups Claim',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'default': [
        'groups',
      ],
      'model': 'config-groups_claim',
      'order': 0,
    },
    {
      'id': 'config-groups_required',
      'help': '<p>The groups (<code>groups_claim</code> claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both <strong>AND</strong> / <strong>OR</strong> cases.</p>\n',
      'label': 'Config.Groups Required',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-groups_required',
      'order': 0,
    },
    {
      'id': 'config-hide_credentials',
      'model': 'config-hide_credentials',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Hide Credentials',
      'help': '<p>Remove the credentials used for authentication from the request. If multiple credentials are sent with the same request, the plugin will remove those that were used for successful authentication.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-http_proxy',
      'model': 'config-http_proxy',
      'type': 'input',
      'required': false,
      'label': 'Config.Http Proxy',
      'help': '<p>The HTTP proxy.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-http_proxy_authorization',
      'model': 'config-http_proxy_authorization',
      'type': 'input',
      'required': false,
      'referenceable': true,
      'label': 'Config.Http Proxy Authorization',
      'help': '<p>The HTTP proxy authorization.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-http_version',
      'model': 'config-http_version',
      'type': 'input',
      'required': false,
      'label': 'Config.Http Version',
      'help': '<p>The HTTP version used for the requests by this plugin: - <code>1.1</code>: HTTP 1.1 (the default) - <code>1.0</code>: HTTP 1.0.</p>\n',
      'default': 1.1,
      'placeholder': 'Default: 1.1',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-https_proxy',
      'model': 'config-https_proxy',
      'type': 'input',
      'required': false,
      'label': 'Config.Https Proxy',
      'help': '<p>The HTTPS proxy.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-https_proxy_authorization',
      'model': 'config-https_proxy_authorization',
      'type': 'input',
      'required': false,
      'referenceable': true,
      'label': 'Config.Https Proxy Authorization',
      'help': '<p>The HTTPS proxy authorization.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-id_token_param_name',
      'model': 'config-id_token_param_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Id Token Param Name',
      'help': '<p>The name of the parameter used to pass the id token.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-id_token_param_type',
      'model': 'config-id_token_param_type',
      'type': 'input',
      'required': false,
      'label': 'Config.Id Token Param Type',
      'help': '<p>Where to look for the id token: - <code>header</code>: search the HTTP headers - <code>query</code>: search the URL&#39;s query string - <code>body</code>: search the HTTP request body.</p>\n',
      'elements': {
        'one_of': [
          'header',
          'query',
          'body',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'header',
        'query',
        'body',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-ignore_signature',
      'model': 'config-ignore_signature',
      'type': 'input',
      'required': false,
      'label': 'Config.Ignore Signature',
      'help': '<p>Skip the token signature verification on certain grants: - <code>password</code>: OAuth password grant - <code>client_credentials</code>: OAuth client credentials grant - <code>authorization_code</code>: authorization code flow - <code>refresh_token</code>: OAuth refresh token grant - <code>session</code>: session cookie authentication - <code>introspection</code>: OAuth introspection - <code>userinfo</code>: OpenID Connect user info endpoint authentication.</p>\n',
      'elements': {
        'one_of': [
          'password',
          'client_credentials',
          'authorization_code',
          'refresh_token',
          'session',
          'introspection',
          'userinfo',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-introspect_jwt_tokens',
      'model': 'config-introspect_jwt_tokens',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Introspect Jwt Tokens',
      'help': '<p>Specifies whether to introspect the JWT access tokens (can be used to check for revocations).</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-introspection_accept',
      'model': 'config-introspection_accept',
      'type': 'select',
      'required': false,
      'label': 'Config.Introspection Accept',
      'help': '<p>The value of <code>Accept</code> header for introspection requests: - <code>application/json</code>: introspection response as JSON - <code>application/token-introspection+jwt</code>: introspection response as JWT (from the current IETF draft document) - <code>application/jwt</code>: introspection response as JWT (from the obsolete IETF draft document).</p>\n',
      'values': [
        'application/json',
        'application/token-introspection+jwt',
        'application/jwt',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'application/json',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-introspection_check_active',
      'model': 'config-introspection_check_active',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Introspection Check Active',
      'help': '<p>Check that the introspection response has an <code>active</code> claim with a value of <code>true</code>.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-introspection_endpoint',
      'model': 'config-introspection_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Introspection Endpoint',
      'help': '<p>The introspection endpoint. If set it overrides the value in <code>introspection_endpoint</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-introspection_endpoint_auth_method',
      'model': 'config-introspection_endpoint_auth_method',
      'type': 'select',
      'required': false,
      'label': 'Config.Introspection Endpoint Auth Method',
      'help': '<p>The introspection endpoint authentication method: : <code>client_secret_basic</code>, <code>client_secret_post</code>, <code>client_secret_jwt</code>, <code>private_key_jwt</code>, <code>tls_client_auth</code>, <code>self_signed_tls_client_auth</code>, or <code>none</code>: do not authenticate</p>\n',
      'values': [
        'client_secret_basic',
        'client_secret_post',
        'client_secret_jwt',
        'private_key_jwt',
        'tls_client_auth',
        'self_signed_tls_client_auth',
        'none',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-introspection_headers_client',
      'help': '<p>Extra headers passed from the client to the introspection endpoint.</p>\n',
      'label': 'Config.Introspection Headers Client',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-introspection_headers_client',
      'order': 0,
    },
    {
      'id': 'config-introspection_headers_names',
      'help': '<p>Extra header names passed to the introspection endpoint.</p>\n',
      'label': 'Config.Introspection Headers Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-introspection_headers_names',
      'order': 0,
    },
    {
      'id': 'config-introspection_headers_values',
      'help': '<p>Extra header values passed to the introspection endpoint.</p>\n',
      'label': 'Config.Introspection Headers Values',
      'referenceable': true,
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-introspection_headers_values',
      'order': 0,
    },
    {
      'id': 'config-introspection_hint',
      'model': 'config-introspection_hint',
      'type': 'input',
      'required': false,
      'label': 'Config.Introspection Hint',
      'help': '<p>Introspection hint parameter value passed to the introspection endpoint.</p>\n',
      'default': 'access_token',
      'placeholder': 'Default: access_token',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-introspection_post_args_client',
      'help': '<p>Extra post arguments passed from the client to the introspection endpoint.</p>\n',
      'label': 'Config.Introspection Post Args Client',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-introspection_post_args_client',
      'order': 0,
    },
    {
      'id': 'config-introspection_post_args_client_headers',
      'help': '<p>Extra post arguments passed from the client headers to the introspection endpoint.</p>\n',
      'label': 'Config.Introspection Post Args Client Headers',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-introspection_post_args_client_headers',
      'order': 0,
    },
    {
      'id': 'config-introspection_post_args_names',
      'help': '<p>Extra post argument names passed to the introspection endpoint.</p>\n',
      'label': 'Config.Introspection Post Args Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-introspection_post_args_names',
      'order': 0,
    },
    {
      'id': 'config-introspection_post_args_values',
      'help': '<p>Extra post argument values passed to the introspection endpoint.</p>\n',
      'label': 'Config.Introspection Post Args Values',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-introspection_post_args_values',
      'order': 0,
    },
    {
      'id': 'config-introspection_token_param_name',
      'model': 'config-introspection_token_param_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Introspection Token Param Name',
      'help': '<p>Designate token&#39;s parameter name for introspection.</p>\n',
      'default': 'token',
      'placeholder': 'Default: token',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-issuer',
      'model': 'config-issuer',
      'type': 'input',
      'required': true,
      'label': 'Config.Issuer',
      'help': '<p>The discovery endpoint (or the issuer identifier). When there is no discovery endpoint, please also configure <code>config.using_pseudo_issuer=true</code>.</p>\n',
      'selectOptions': {
        'hideNoneSelectedText': true,
      },
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-issuers_allowed',
      'help': '<p>The issuers allowed to be present in the tokens (<code>iss</code> claim).</p>\n',
      'label': 'Config.Issuers Allowed',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-issuers_allowed',
      'order': 0,
    },
    {
      'id': 'config-jwt_session_claim',
      'model': 'config-jwt_session_claim',
      'type': 'input',
      'required': false,
      'label': 'Config.Jwt Session Claim',
      'help': '<p>The claim to match against the JWT session cookie.</p>\n',
      'default': 'sid',
      'placeholder': 'Default: sid',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-jwt_session_cookie',
      'model': 'config-jwt_session_cookie',
      'type': 'input',
      'required': false,
      'label': 'Config.Jwt Session Cookie',
      'help': '<p>The name of the JWT session cookie.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-keepalive',
      'model': 'config-keepalive',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Keepalive',
      'help': '<p>Use keepalive with the HTTP client.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-leeway',
      'model': 'config-leeway',
      'type': 'input',
      'required': false,
      'label': 'Config.Leeway',
      'help': '<p>Defines leeway time (in seconds) for <code>auth_time</code>, <code>exp</code>, <code>iat</code>, and <code>nbf</code> claims.</p>\n',
      'default': 0,
      'placeholder': 'Default: 0',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-login_action',
      'model': 'config-login_action',
      'type': 'select',
      'required': false,
      'label': 'Config.Login Action',
      'help': '<p>What to do after successful login: - <code>upstream</code>: proxy request to upstream service - <code>response</code>: terminate request with a response - <code>redirect</code>: redirect to a different location.</p>\n',
      'values': [
        'upstream',
        'response',
        'redirect',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'upstream',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-login_methods',
      'model': 'config-login_methods',
      'type': 'input',
      'required': false,
      'label': 'Config.Login Methods',
      'help': '<p>Enable login functionality with specified grants.</p>\n',
      'elements': {
        'one_of': [
          'password',
          'client_credentials',
          'authorization_code',
          'bearer',
          'introspection',
          'userinfo',
          'kong_oauth2',
          'refresh_token',
          'session',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'authorization_code',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-login_redirect_mode',
      'model': 'config-login_redirect_mode',
      'type': 'select',
      'required': false,
      'label': 'Config.Login Redirect Mode',
      'help': '<p>Where to place <code>login_tokens</code> when using <code>redirect</code> <code>login_action</code>: - <code>query</code>: place tokens in query string - <code>fragment</code>: place tokens in url fragment (not readable by servers).</p>\n',
      'values': [
        'query',
        'fragment',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'fragment',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-login_redirect_uri',
      'help': '<p>Where to redirect the client when <code>login_action</code> is set to <code>redirect</code>.</p>\n',
      'label': 'Config.Login Redirect Uri',
      'referenceable': true,
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-login_redirect_uri',
      'order': 0,
    },
    {
      'id': 'config-login_tokens',
      'model': 'config-login_tokens',
      'type': 'input',
      'required': false,
      'label': 'Config.Login Tokens',
      'help': '<p>What tokens to include in <code>response</code> body or <code>redirect</code> query string or fragment: - <code>id_token</code>: include id token - <code>access_token</code>: include access token - <code>refresh_token</code>: include refresh token - <code>tokens</code>: include the full token endpoint response - <code>introspection</code>: include introspection response.</p>\n',
      'elements': {
        'one_of': [
          'id_token',
          'access_token',
          'refresh_token',
          'tokens',
          'introspection',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'id_token',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-logout_methods',
      'model': 'config-logout_methods',
      'type': 'input',
      'required': false,
      'label': 'Config.Logout Methods',
      'help': '<p>The request methods that can activate the logout: - <code>POST</code>: HTTP POST method - <code>GET</code>: HTTP GET method - <code>DELETE</code>: HTTP DELETE method.</p>\n',
      'elements': {
        'one_of': [
          'POST',
          'GET',
          'DELETE',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'POST',
        'DELETE',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-logout_post_arg',
      'model': 'config-logout_post_arg',
      'type': 'input',
      'required': false,
      'label': 'Config.Logout Post Arg',
      'help': '<p>The request body argument that activates the logout.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-logout_query_arg',
      'model': 'config-logout_query_arg',
      'type': 'input',
      'required': false,
      'label': 'Config.Logout Query Arg',
      'help': '<p>The request query argument that activates the logout.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-logout_redirect_uri',
      'help': '<p>Where to redirect the client after the logout.</p>\n',
      'label': 'Config.Logout Redirect Uri',
      'referenceable': true,
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-logout_redirect_uri',
      'order': 0,
    },
    {
      'id': 'config-logout_revoke',
      'model': 'config-logout_revoke',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Logout Revoke',
      'help': '<p>Revoke tokens as part of the logout.</p>\n<p>For more granular token revocation, you can also adjust the <code>logout_revoke_access_token</code> and <code>logout_revoke_refresh_token</code> parameters.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-logout_revoke_access_token',
      'model': 'config-logout_revoke_access_token',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Logout Revoke Access Token',
      'help': '<p>Revoke the access token as part of the logout. Requires <code>logout_revoke</code> to be set to <code>true</code>.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-logout_revoke_refresh_token',
      'model': 'config-logout_revoke_refresh_token',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Logout Revoke Refresh Token',
      'help': '<p>Revoke the refresh token as part of the logout. Requires <code>logout_revoke</code> to be set to <code>true</code>.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-logout_uri_suffix',
      'model': 'config-logout_uri_suffix',
      'type': 'input',
      'required': false,
      'label': 'Config.Logout Uri Suffix',
      'help': '<p>The request URI suffix that activates the logout.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-max_age',
      'model': 'config-max_age',
      'type': 'input',
      'required': false,
      'label': 'Config.Max Age',
      'help': '<p>The maximum age (in seconds) compared to the <code>auth_time</code> claim.</p>\n',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-mtls_introspection_endpoint',
      'model': 'config-mtls_introspection_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Mtls Introspection Endpoint',
      'help': '<p>Alias for the introspection endpoint to be used for mTLS client authentication. If set it overrides the value in <code>mtls_endpoint_aliases</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-mtls_revocation_endpoint',
      'model': 'config-mtls_revocation_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Mtls Revocation Endpoint',
      'help': '<p>Alias for the introspection endpoint to be used for mTLS client authentication. If set it overrides the value in <code>mtls_endpoint_aliases</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-mtls_token_endpoint',
      'model': 'config-mtls_token_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Mtls Token Endpoint',
      'help': '<p>Alias for the token endpoint to be used for mTLS client authentication. If set it overrides the value in <code>mtls_endpoint_aliases</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-no_proxy',
      'model': 'config-no_proxy',
      'type': 'input',
      'required': false,
      'label': 'Config.No Proxy',
      'help': '<p>Do not use proxy with these hosts.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-password_param_type',
      'model': 'config-password_param_type',
      'type': 'input',
      'required': false,
      'label': 'Config.Password Param Type',
      'help': '<p>Where to look for the username and password: - <code>header</code>: search the HTTP headers - <code>query</code>: search the URL&#39;s query string - <code>body</code>: search the HTTP request body.</p>\n',
      'elements': {
        'one_of': [
          'header',
          'query',
          'body',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'header',
        'query',
        'body',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-preserve_query_args',
      'model': 'config-preserve_query_args',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Preserve Query Args',
      'help': '<p>With this parameter, you can preserve request query arguments even when doing authorization code flow.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-proof_of_possession_auth_methods_validation',
      'model': 'config-proof_of_possession_auth_methods_validation',
      'type': 'checkbox',
      'label': 'Config.Proof Of Possession Auth Methods Validation',
      'help': '<p>If set to true, only the auth_methods that are compatible with Proof of Possession (PoP) can be configured when PoP is enabled. If set to false, all auth_methods will be configurable and PoP checks will be silently skipped for those auth_methods that are not compatible with PoP.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-proof_of_possession_dpop',
      'model': 'config-proof_of_possession_dpop',
      'type': 'select',
      'required': false,
      'label': 'Config.Proof Of Possession Dpop',
      'help': '<p>Enable Demonstrating Proof-of-Possession (DPoP). If set to strict, all request are verified despite the presence of the DPoP key claim (cnf.jkt). If set to optional, only tokens bound with DPoP&#39;s key are verified with the proof.</p>\n',
      'values': [
        'off',
        'strict',
        'optional',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'off',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-proof_of_possession_mtls',
      'model': 'config-proof_of_possession_mtls',
      'type': 'select',
      'label': 'Config.Proof Of Possession Mtls',
      'help': '<p>Enable mtls proof of possession. If set to strict, all tokens (from supported auth_methods: bearer, introspection, and session granted with bearer or introspection) are verified, if set to optional, only tokens that contain the certificate hash claim are verified. If the verification fails, the request will be rejected with 401.</p>\n',
      'values': [
        'off',
        'strict',
        'optional',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'off',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-pushed_authorization_request_endpoint',
      'model': 'config-pushed_authorization_request_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Pushed Authorization Request Endpoint',
      'help': '<p>The pushed authorization endpoint. If set it overrides the value in <code>pushed_authorization_request_endpoint</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-pushed_authorization_request_endpoint_auth_method',
      'model': 'config-pushed_authorization_request_endpoint_auth_method',
      'type': 'select',
      'required': false,
      'label': 'Config.Pushed Authorization Request Endpoint Auth Method',
      'help': '<p>The pushed authorization request endpoint authentication method: <code>client_secret_basic</code>, <code>client_secret_post</code>, <code>client_secret_jwt</code>, <code>private_key_jwt</code>, <code>tls_client_auth</code>, <code>self_signed_tls_client_auth</code>, or <code>none</code>: do not authenticate</p>\n',
      'values': [
        'client_secret_basic',
        'client_secret_post',
        'client_secret_jwt',
        'private_key_jwt',
        'tls_client_auth',
        'self_signed_tls_client_auth',
        'none',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redirect_uri',
      'help': '<p>The redirect URI passed to the authorization and token endpoints.</p>\n',
      'label': 'Config.Redirect Uri',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-redirect_uri',
      'order': 0,
    },
    {
      'id': 'config-redis-cluster_max_redirections',
      'model': 'config-redis-cluster_max_redirections',
      'type': 'input',
      'required': false,
      'label': 'Config.Redis.Cluster Max Redirections',
      'help': '<p>Maximum retry attempts for redirection.</p>\n',
      'default': 5,
      'placeholder': 'Default: 5',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-redis-cluster_nodes',
      'model': 'config-redis-cluster_nodes',
      'type': 'array',
      'required': false,
      'label': 'Config.Redis.Cluster Nodes',
      'help': '<p>Cluster addresses to use for Redis connections when the <code>redis</code> strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.</p>\n',
      'elements': {
        'fields': [
          {
            'ip': {
              'default': '127.0.0.1',
              'description': 'A string representing a host name, such as example.com.',
              'required': true,
              'type': 'string',
            },
          },
          {
            'port': {
              'between': [
                0,
                65535,
              ],
              'default': 6379,
              'description': 'An integer representing a port number between 0 and 65535, inclusive.',
              'type': 'integer',
            },
          },
        ],
        'type': 'record',
      },
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'fieldClasses': 'array-card-container-wrapper',
      'itemContainerComponent': 'FieldArrayCardContainer',
      'items': {
        'type': 'object',
        'schema': {
          'fields': [
            {
              'id': 'config-redis-cluster_nodes-ip',
              'model': 'ip',
              'type': 'input',
              'required': true,
              'label': 'Ip',
              'help': '<p>A string representing a host name, such as example.com.</p>\n',
              'selectOptions': {
                'hideNoneSelectedText': true,
              },
              'default': '127.0.0.1',
              'placeholder': 'Default: 127.0.0.1',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-redis-cluster_nodes-port',
              'model': 'port',
              'type': 'input',
              'label': 'Port',
              'help': '<p>An integer representing a port number between 0 and 65535, inclusive.</p>\n',
              'default': 6379,
              'placeholder': 'Default: 6379',
              'inputType': 'number',
              'valueType': 'number',
            },
          ],
        },
      },
      'nestedFields': true,
      'submitWhenNull': true,
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-redis-connect_timeout',
      'model': 'config-redis-connect_timeout',
      'type': 'input',
      'label': 'Config.Redis.Connect Timeout',
      'help': '<p>An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.</p>\n',
      'default': 2000,
      'placeholder': 'Default: 2000',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-redis-connection_is_proxied',
      'model': 'config-redis-connection_is_proxied',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Redis.Connection Is Proxied',
      'help': '<p>If the connection to Redis is proxied (e.g. Envoy), set it <code>true</code>. Set the <code>host</code> and <code>port</code> to point to the proxy address.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-redis-database',
      'model': 'config-redis-database',
      'type': 'input',
      'label': 'Config.Redis.Database',
      'help': '<p>Database to use for the Redis connection when using the <code>redis</code> strategy</p>\n',
      'default': 0,
      'placeholder': 'Default: 0',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-redis-host',
      'model': 'config-redis-host',
      'type': 'input',
      'label': 'Config.Redis.Host',
      'help': '<p>A string representing a host name, such as example.com.</p>\n',
      'default': '127.0.0.1',
      'placeholder': 'Default: 127.0.0.1',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redis-keepalive_backlog',
      'model': 'config-redis-keepalive_backlog',
      'type': 'input',
      'label': 'Config.Redis.Keepalive Backlog',
      'help': '<p>Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return <code>nil</code>. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than <code>keepalive_pool_size</code>. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than <code>keepalive_pool_size</code>.</p>\n',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-redis-keepalive_pool_size',
      'model': 'config-redis-keepalive_pool_size',
      'type': 'input',
      'label': 'Config.Redis.Keepalive Pool Size',
      'help': '<p>The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither <code>keepalive_pool_size</code> nor <code>keepalive_backlog</code> is specified, no pool is created. If <code>keepalive_pool_size</code> isn&#39;t specified but <code>keepalive_backlog</code> is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.</p>\n',
      'default': 256,
      'placeholder': 'Default: 256',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-redis-password',
      'model': 'config-redis-password',
      'type': 'input',
      'referenceable': true,
      'label': 'Config.Redis.Password',
      'help': '<p>Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.</p>\n',
      'inputType': 'password',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redis-port',
      'model': 'config-redis-port',
      'type': 'input',
      'label': 'Config.Redis.Port',
      'help': '<p>An integer representing a port number between 0 and 65535, inclusive.</p>\n',
      'default': 6379,
      'placeholder': 'Default: 6379',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-redis-prefix',
      'model': 'config-redis-prefix',
      'type': 'input',
      'required': false,
      'label': 'Config.Redis.Prefix',
      'help': '<p>The Redis session key prefix.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redis-read_timeout',
      'model': 'config-redis-read_timeout',
      'type': 'input',
      'label': 'Config.Redis.Read Timeout',
      'help': '<p>An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.</p>\n',
      'default': 2000,
      'placeholder': 'Default: 2000',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-redis-send_timeout',
      'model': 'config-redis-send_timeout',
      'type': 'input',
      'label': 'Config.Redis.Send Timeout',
      'help': '<p>An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.</p>\n',
      'default': 2000,
      'placeholder': 'Default: 2000',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-redis-sentinel_master',
      'model': 'config-redis-sentinel_master',
      'type': 'input',
      'label': 'Config.Redis.Sentinel Master',
      'help': '<p>Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redis-sentinel_nodes',
      'model': 'config-redis-sentinel_nodes',
      'type': 'array',
      'required': false,
      'label': 'Config.Redis.Sentinel Nodes',
      'help': '<p>Sentinel node addresses to use for Redis connections when the <code>redis</code> strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.</p>\n',
      'elements': {
        'fields': [
          {
            'host': {
              'default': '127.0.0.1',
              'description': 'A string representing a host name, such as example.com.',
              'required': true,
              'type': 'string',
            },
          },
          {
            'port': {
              'between': [
                0,
                65535,
              ],
              'default': 6379,
              'description': 'An integer representing a port number between 0 and 65535, inclusive.',
              'type': 'integer',
            },
          },
        ],
        'type': 'record',
      },
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'fieldClasses': 'array-card-container-wrapper',
      'itemContainerComponent': 'FieldArrayCardContainer',
      'items': {
        'type': 'object',
        'schema': {
          'fields': [
            {
              'id': 'config-redis-sentinel_nodes-host',
              'model': 'host',
              'type': 'input',
              'required': true,
              'label': 'Host',
              'help': '<p>A string representing a host name, such as example.com.</p>\n',
              'selectOptions': {
                'hideNoneSelectedText': true,
              },
              'default': '127.0.0.1',
              'placeholder': 'Default: 127.0.0.1',
              'inputType': 'text',
              'valueType': 'string',
            },
            {
              'id': 'config-redis-sentinel_nodes-port',
              'model': 'port',
              'type': 'input',
              'label': 'Port',
              'help': '<p>An integer representing a port number between 0 and 65535, inclusive.</p>\n',
              'default': 6379,
              'placeholder': 'Default: 6379',
              'inputType': 'number',
              'valueType': 'number',
            },
          ],
        },
      },
      'nestedFields': true,
      'submitWhenNull': true,
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-redis-sentinel_password',
      'model': 'config-redis-sentinel_password',
      'type': 'input',
      'referenceable': true,
      'label': 'Config.Redis.Sentinel Password',
      'help': '<p>Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.</p>\n',
      'inputType': 'password',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redis-sentinel_role',
      'model': 'config-redis-sentinel_role',
      'type': 'select',
      'label': 'Config.Redis.Sentinel Role',
      'help': '<p>Sentinel role to use for Redis connections when the <code>redis</code> strategy is defined. Defining this value implies using Redis Sentinel.</p>\n',
      'values': [
        'master',
        'slave',
        'any',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redis-sentinel_username',
      'model': 'config-redis-sentinel_username',
      'type': 'input',
      'referenceable': true,
      'label': 'Config.Redis.Sentinel Username',
      'help': '<p>Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won&#39;t be performed. This requires Redis v6.2.0+.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redis-server_name',
      'model': 'config-redis-server_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Redis.Server Name',
      'help': '<p>A string representing an SNI (server name indication) value for TLS.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redis-socket',
      'model': 'config-redis-socket',
      'type': 'input',
      'required': false,
      'label': 'Config.Redis.Socket',
      'help': '<p>The Redis unix socket path.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-redis-ssl',
      'model': 'config-redis-ssl',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Redis.Ssl',
      'help': '<p>If set to true, uses SSL to connect to Redis.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-redis-ssl_verify',
      'model': 'config-redis-ssl_verify',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Redis.Ssl Verify',
      'help': '<p>If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure <code>lua_ssl_trusted_certificate</code> in <code>kong.conf</code> to specify the CA (or server) certificate used by your Redis server. You may also need to configure <code>lua_ssl_verify_depth</code> accordingly.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-redis-username',
      'model': 'config-redis-username',
      'type': 'input',
      'referenceable': true,
      'label': 'Config.Redis.Username',
      'help': '<p>Username to use for Redis connections. If undefined, ACL authentication won&#39;t be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to <code>default</code>.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-rediscovery_lifetime',
      'model': 'config-rediscovery_lifetime',
      'type': 'input',
      'required': false,
      'label': 'Config.Rediscovery Lifetime',
      'help': '<p>Specifies how long (in seconds) the plugin waits between discovery attempts. Discovery is still triggered on an as-needed basis.</p>\n',
      'default': 30,
      'placeholder': 'Default: 30',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-refresh_token_param_name',
      'model': 'config-refresh_token_param_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Refresh Token Param Name',
      'help': '<p>The name of the parameter used to pass the refresh token.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-refresh_token_param_type',
      'model': 'config-refresh_token_param_type',
      'type': 'input',
      'required': false,
      'label': 'Config.Refresh Token Param Type',
      'help': '<p>Where to look for the refresh token: - <code>header</code>: search the HTTP headers - <code>query</code>: search the URL&#39;s query string - <code>body</code>: search the HTTP request body.</p>\n',
      'elements': {
        'one_of': [
          'header',
          'query',
          'body',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'default': [
        'header',
        'query',
        'body',
      ],
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-refresh_tokens',
      'model': 'config-refresh_tokens',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Refresh Tokens',
      'help': '<p>Specifies whether the plugin should try to refresh (soon to be) expired access tokens if the plugin has a <code>refresh_token</code> available.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-require_proof_key_for_code_exchange',
      'model': 'config-require_proof_key_for_code_exchange',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Require Proof Key For Code Exchange',
      'help': '<p>Forcibly enable or disable the proof key for code exchange. When not set the value is determined through the discovery using the value of <code>code_challenge_methods_supported</code>, and enabled automatically (in case the <code>code_challenge_methods_supported</code> is missing, the PKCE will not be enabled).</p>\n',
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-require_pushed_authorization_requests',
      'model': 'config-require_pushed_authorization_requests',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Require Pushed Authorization Requests',
      'help': '<p>Forcibly enable or disable the pushed authorization requests. When not set the value is determined through the discovery using the value of <code>require_pushed_authorization_requests</code> (which defaults to <code>false</code>).</p>\n',
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-require_signed_request_object',
      'model': 'config-require_signed_request_object',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Require Signed Request Object',
      'help': '<p>Forcibly enable or disable the usage of signed request object on authorization or pushed authorization endpoint. When not set the value is determined through the discovery using the value of <code>require_signed_request_object</code>, and enabled automatically (in case the <code>require_signed_request_object</code> is missing, the feature will not be enabled).</p>\n',
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-resolve_distributed_claims',
      'model': 'config-resolve_distributed_claims',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Resolve Distributed Claims',
      'help': '<p>Distributed claims are represented by the <code>_claim_names</code> and <code>_claim_sources</code> members of the JSON object containing the claims. If this parameter is set to <code>true</code>, the plugin explicitly resolves these distributed claims.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-response_mode',
      'model': 'config-response_mode',
      'type': 'select',
      'required': false,
      'label': 'Config.Response Mode',
      'help': '<p>Response mode passed to the authorization endpoint: - <code>query</code>: for parameters in query string - <code>form_post</code>: for parameters in request body - <code>fragment</code>: for parameters in uri fragment (rarely useful as the plugin itself cannot read it) - <code>query.jwt</code>, <code>form_post.jwt</code>, <code>fragment.jwt</code>: similar to <code>query</code>, <code>form_post</code> and <code>fragment</code> but the parameters are encoded in a JWT - <code>jwt</code>: shortcut that indicates the default encoding for the requested response type.</p>\n',
      'values': [
        'query',
        'form_post',
        'fragment',
        'query.jwt',
        'form_post.jwt',
        'fragment.jwt',
        'jwt',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'query',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-response_type',
      'help': '<p>The response type passed to the authorization endpoint.</p>\n',
      'label': 'Config.Response Type',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'default': [
        'code',
      ],
      'model': 'config-response_type',
      'order': 0,
    },
    {
      'id': 'config-reverify',
      'model': 'config-reverify',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Reverify',
      'help': '<p>Specifies whether to always verify tokens stored in the session.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-revocation_endpoint',
      'model': 'config-revocation_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Revocation Endpoint',
      'help': '<p>The revocation endpoint. If set it overrides the value in <code>revocation_endpoint</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-revocation_endpoint_auth_method',
      'model': 'config-revocation_endpoint_auth_method',
      'type': 'select',
      'required': false,
      'label': 'Config.Revocation Endpoint Auth Method',
      'help': '<p>The revocation endpoint authentication method: : <code>client_secret_basic</code>, <code>client_secret_post</code>, <code>client_secret_jwt</code>, <code>private_key_jwt</code>, <code>tls_client_auth</code>, <code>self_signed_tls_client_auth</code>, or <code>none</code>: do not authenticate</p>\n',
      'values': [
        'client_secret_basic',
        'client_secret_post',
        'client_secret_jwt',
        'private_key_jwt',
        'tls_client_auth',
        'self_signed_tls_client_auth',
        'none',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-revocation_token_param_name',
      'model': 'config-revocation_token_param_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Revocation Token Param Name',
      'help': '<p>Designate token&#39;s parameter name for revocation.</p>\n',
      'default': 'token',
      'placeholder': 'Default: token',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-roles_claim',
      'help': '<p>The claim that contains the roles. If multiple values are set, it means the claim is inside a nested object of the token payload.</p>\n',
      'label': 'Config.Roles Claim',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'default': [
        'roles',
      ],
      'model': 'config-roles_claim',
      'order': 0,
    },
    {
      'id': 'config-roles_required',
      'help': '<p>The roles (<code>roles_claim</code> claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both <strong>AND</strong> / <strong>OR</strong> cases.</p>\n',
      'label': 'Config.Roles Required',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-roles_required',
      'order': 0,
    },
    {
      'id': 'config-run_on_preflight',
      'model': 'config-run_on_preflight',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Run On Preflight',
      'help': '<p>Specifies whether to run this plugin on pre-flight (<code>OPTIONS</code>) requests.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-scopes',
      'help': '<p>The scopes passed to the authorization and token endpoints.</p>\n',
      'label': 'Config.Scopes',
      'referenceable': true,
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'default': [
        'openid',
      ],
      'model': 'config-scopes',
      'order': 0,
    },
    {
      'id': 'config-scopes_claim',
      'help': '<p>The claim that contains the scopes. If multiple values are set, it means the claim is inside a nested object of the token payload.</p>\n',
      'label': 'Config.Scopes Claim',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'default': [
        'scope',
      ],
      'model': 'config-scopes_claim',
      'order': 0,
    },
    {
      'id': 'config-scopes_required',
      'help': '<p>The scopes (<code>scopes_claim</code> claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both <strong>AND</strong> / <strong>OR</strong> cases.</p>\n',
      'label': 'Config.Scopes Required',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-scopes_required',
      'order': 0,
    },
    {
      'id': 'config-search_user_info',
      'model': 'config-search_user_info',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Search User Info',
      'help': '<p>Specify whether to use the user info endpoint to get additional claims for consumer mapping, credential mapping, authenticated groups, and upstream and downstream headers.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-session_absolute_timeout',
      'model': 'config-session_absolute_timeout',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Absolute Timeout',
      'help': '<p>Limits how long the session can be renewed in seconds, until re-authentication is required. 0 disables the checks.</p>\n',
      'default': 86400,
      'placeholder': 'Default: 86400',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-session_audience',
      'model': 'config-session_audience',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Audience',
      'help': '<p>The session audience, which is the intended target application. For example <code>&quot;my-application&quot;</code>.</p>\n',
      'default': 'default',
      'placeholder': 'Default: default',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_compressor',
      'model': 'config-session_compressor',
      'type': 'select',
      'required': false,
      'label': 'Config.Session Compressor',
      'values': [
        'none',
        'zlib',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'none',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_cookie_domain',
      'model': 'config-session_cookie_domain',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Cookie Domain',
      'help': '<p>The session cookie Domain flag.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_cookie_http_only',
      'model': 'config-session_cookie_http_only',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Session Cookie Http Only',
      'help': '<p>Forbids JavaScript from accessing the cookie, for example, through the <code>Document.cookie</code> property.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-session_cookie_maxsize',
      'model': 'config-session_cookie_maxsize',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Cookie Maxsize',
      'default': 4000,
      'placeholder': 'Default: 4000',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-session_cookie_name',
      'model': 'config-session_cookie_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Cookie Name',
      'help': '<p>The session cookie name.</p>\n',
      'default': 'session',
      'placeholder': 'Default: session',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_cookie_path',
      'model': 'config-session_cookie_path',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Cookie Path',
      'help': '<p>The session cookie Path flag.</p>\n',
      'default': '/',
      'placeholder': 'Default: /',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_cookie_renew',
      'model': 'config-session_cookie_renew',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Cookie Renew',
      'default': 600,
      'placeholder': 'Default: 600',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-session_cookie_same_site',
      'model': 'config-session_cookie_same_site',
      'type': 'select',
      'required': false,
      'label': 'Config.Session Cookie Same Site',
      'help': '<p>Controls whether a cookie is sent with cross-origin requests, providing some protection against cross-site request forgery attacks.</p>\n',
      'values': [
        'Strict',
        'Lax',
        'None',
        'Default',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'Lax',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_cookie_secure',
      'model': 'config-session_cookie_secure',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Session Cookie Secure',
      'help': '<p>Cookie is only sent to the server when a request is made with the https: scheme (except on localhost), and therefore is more resistant to man-in-the-middle attacks.</p>\n',
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-session_enforce_same_subject',
      'model': 'config-session_enforce_same_subject',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Session Enforce Same Subject',
      'help': '<p>When set to <code>true</code>, audiences are forced to share the same subject.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-session_hash_storage_key',
      'model': 'config-session_hash_storage_key',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Session Hash Storage Key',
      'help': '<p>When set to <code>true</code>, the storage key (session ID) is hashed for extra security. Hashing the storage key means it is impossible to decrypt data from the storage without a cookie.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-session_hash_subject',
      'model': 'config-session_hash_subject',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Session Hash Subject',
      'help': '<p>When set to <code>true</code>, the value of subject is hashed before being stored. Only applies when <code>session_store_metadata</code> is enabled.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-session_idling_timeout',
      'model': 'config-session_idling_timeout',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Idling Timeout',
      'help': '<p>Specifies how long the session can be inactive until it is considered invalid in seconds. 0 disables the checks and touching.</p>\n',
      'default': 900,
      'placeholder': 'Default: 900',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-session_memcached_host',
      'model': 'config-session_memcached_host',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Memcached Host',
      'help': '<p>The memcached host.</p>\n',
      'default': '127.0.0.1',
      'placeholder': 'Default: 127.0.0.1',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_memcached_port',
      'model': 'config-session_memcached_port',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Memcached Port',
      'help': '<p>The memcached port.</p>\n',
      'default': 11211,
      'placeholder': 'Default: 11211',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-session_memcached_prefix',
      'model': 'config-session_memcached_prefix',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Memcached Prefix',
      'help': '<p>The memcached session key prefix.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_memcached_socket',
      'model': 'config-session_memcached_socket',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Memcached Socket',
      'help': '<p>The memcached unix socket path.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_remember',
      'model': 'config-session_remember',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Session Remember',
      'help': '<p>Enables or disables persistent sessions.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-session_remember_absolute_timeout',
      'model': 'config-session_remember_absolute_timeout',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Remember Absolute Timeout',
      'help': '<p>Limits how long the persistent session can be renewed in seconds, until re-authentication is required. 0 disables the checks.</p>\n',
      'default': 2592000,
      'placeholder': 'Default: 2592000',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-session_remember_cookie_name',
      'model': 'config-session_remember_cookie_name',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Remember Cookie Name',
      'help': '<p>Persistent session cookie name. Use with the <code>remember</code> configuration parameter.</p>\n',
      'default': 'remember',
      'placeholder': 'Default: remember',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_remember_rolling_timeout',
      'model': 'config-session_remember_rolling_timeout',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Remember Rolling Timeout',
      'help': '<p>Specifies how long the persistent session is considered valid in seconds. 0 disables the checks and rolling.</p>\n',
      'default': 604800,
      'placeholder': 'Default: 604800',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-session_request_headers',
      'model': 'config-session_request_headers',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Request Headers',
      'help': '<p>Set of headers to send to upstream, use id, audience, subject, timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g. <code>[ &quot;id&quot;, &quot;timeout&quot; ]</code> will set Session-Id and Session-Timeout request headers.</p>\n',
      'elements': {
        'one_of': [
          'id',
          'audience',
          'subject',
          'timeout',
          'idling-timeout',
          'rolling-timeout',
          'absolute-timeout',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-session_response_headers',
      'model': 'config-session_response_headers',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Response Headers',
      'help': '<p>Set of headers to send to downstream, use id, audience, subject, timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g. <code>[ &quot;id&quot;, &quot;timeout&quot; ]</code> will set Session-Id and Session-Timeout response headers.</p>\n',
      'elements': {
        'one_of': [
          'id',
          'audience',
          'subject',
          'timeout',
          'idling-timeout',
          'rolling-timeout',
          'absolute-timeout',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-session_rolling_timeout',
      'model': 'config-session_rolling_timeout',
      'type': 'input',
      'required': false,
      'label': 'Config.Session Rolling Timeout',
      'help': '<p>Specifies how long the session can be used in seconds until it needs to be renewed. 0 disables the checks and rolling.</p>\n',
      'default': 3600,
      'placeholder': 'Default: 3600',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-session_secret',
      'model': 'config-session_secret',
      'type': 'input',
      'required': false,
      'referenceable': true,
      'label': 'Config.Session Secret',
      'help': '<p>The session secret.</p>\n',
      'inputType': 'password',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_storage',
      'model': 'config-session_storage',
      'type': 'select',
      'required': false,
      'label': 'Config.Session Storage',
      'help': '<p>The session storage for session data: - <code>cookie</code>: stores session data with the session cookie (the session cannot be invalidated or revoked without changing session secret, but is stateless, and doesn&#39;t require a database) - <code>memcache</code>: stores session data in memcached - <code>redis</code>: stores session data in Redis.</p>\n',
      'values': [
        'cookie',
        'memcache',
        'memcached',
        'redis',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'cookie',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-session_store_metadata',
      'model': 'config-session_store_metadata',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Session Store Metadata',
      'help': '<p>Configures whether or not session metadata should be stored. This metadata includes information about the active sessions for a specific audience belonging to a specific subject.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-session_strategy',
      'model': 'config-session_strategy',
      'type': 'select',
      'required': false,
      'label': 'Config.Session Strategy',
      'values': [
        'default',
        'regenerate',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'default',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-ssl_verify',
      'model': 'config-ssl_verify',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Ssl Verify',
      'help': '<p>Verify identity provider server certificate. If set to <code>true</code>, the plugin uses the CA certificate set in the <code>kong.conf</code> config parameter <code>lua_ssl_trusted_certificate</code>.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-timeout',
      'model': 'config-timeout',
      'type': 'input',
      'required': false,
      'label': 'Config.Timeout',
      'help': '<p>Network IO timeout in milliseconds.</p>\n',
      'default': 10000,
      'placeholder': 'Default: 10000',
      'inputType': 'number',
      'valueType': 'number',
      'order': 0,
    },
    {
      'id': 'config-tls_client_auth_cert_id',
      'model': 'config-tls_client_auth_cert_id',
      'type': 'input',
      'required': false,
      'label': 'Config.Tls Client Auth Cert Id',
      'help': '<p>ID of the Certificate entity representing the client certificate to use for mTLS client authentication for connections between Kong and the Auth Server.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-tls_client_auth_ssl_verify',
      'model': 'config-tls_client_auth_ssl_verify',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Tls Client Auth Ssl Verify',
      'help': '<p>Verify identity provider server certificate during mTLS client authentication.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-token_cache_key_include_scope',
      'model': 'config-token_cache_key_include_scope',
      'type': 'checkbox',
      'label': 'Config.Token Cache Key Include Scope',
      'help': '<p>Include the scope in the token cache key, so token with different scopes are considered diffrent tokens.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-token_endpoint',
      'model': 'config-token_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Token Endpoint',
      'help': '<p>The token endpoint. If set it overrides the value in <code>token_endpoint</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-token_endpoint_auth_method',
      'model': 'config-token_endpoint_auth_method',
      'type': 'select',
      'required': false,
      'label': 'Config.Token Endpoint Auth Method',
      'help': '<p>The token endpoint authentication method: <code>client_secret_basic</code>, <code>client_secret_post</code>, <code>client_secret_jwt</code>, <code>private_key_jwt</code>, <code>tls_client_auth</code>, <code>self_signed_tls_client_auth</code>, or <code>none</code>: do not authenticate</p>\n',
      'values': [
        'client_secret_basic',
        'client_secret_post',
        'client_secret_jwt',
        'private_key_jwt',
        'tls_client_auth',
        'self_signed_tls_client_auth',
        'none',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-token_exchange_endpoint',
      'model': 'config-token_exchange_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Token Exchange Endpoint',
      'help': '<p>The token exchange endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-token_headers_client',
      'help': '<p>Extra headers passed from the client to the token endpoint.</p>\n',
      'label': 'Config.Token Headers Client',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-token_headers_client',
      'order': 0,
    },
    {
      'id': 'config-token_headers_grants',
      'model': 'config-token_headers_grants',
      'type': 'input',
      'required': false,
      'label': 'Config.Token Headers Grants',
      'help': '<p>Enable the sending of the token endpoint response headers only with certain grants: - <code>password</code>: with OAuth password grant - <code>client_credentials</code>: with OAuth client credentials grant - <code>authorization_code</code>: with authorization code flow - <code>refresh_token</code> with refresh token grant.</p>\n',
      'elements': {
        'one_of': [
          'password',
          'client_credentials',
          'authorization_code',
          'refresh_token',
        ],
        'type': 'string',
      },
      'valueArrayType': 'string',
      'inputType': 'text',
      'valueType': 'array',
      'order': 0,
    },
    {
      'id': 'config-token_headers_names',
      'help': '<p>Extra header names passed to the token endpoint.</p>\n',
      'label': 'Config.Token Headers Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-token_headers_names',
      'order': 0,
    },
    {
      'id': 'config-token_headers_prefix',
      'model': 'config-token_headers_prefix',
      'type': 'input',
      'required': false,
      'label': 'Config.Token Headers Prefix',
      'help': '<p>Add a prefix to the token endpoint response headers before forwarding them to the downstream client.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-token_headers_replay',
      'help': '<p>The names of token endpoint response headers to forward to the downstream client.</p>\n',
      'label': 'Config.Token Headers Replay',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-token_headers_replay',
      'order': 0,
    },
    {
      'id': 'config-token_headers_values',
      'help': '<p>Extra header values passed to the token endpoint.</p>\n',
      'label': 'Config.Token Headers Values',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-token_headers_values',
      'order': 0,
    },
    {
      'id': 'config-token_post_args_client',
      'help': '<p>Pass extra arguments from the client to the OpenID-Connect plugin. If arguments exist, the client can pass them using: - Query parameters - Request Body - Request Header  This parameter can be used with <code>scope</code> values, like this:  <code>config.token_post_args_client=scope</code>  In this case, the token would take the <code>scope</code> value from the query parameter or from the request body or from the header and send it to the token endpoint.</p>\n',
      'label': 'Config.Token Post Args Client',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-token_post_args_client',
      'order': 0,
    },
    {
      'id': 'config-token_post_args_names',
      'help': '<p>Extra post argument names passed to the token endpoint.</p>\n',
      'label': 'Config.Token Post Args Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-token_post_args_names',
      'order': 0,
    },
    {
      'id': 'config-token_post_args_values',
      'help': '<p>Extra post argument values passed to the token endpoint.</p>\n',
      'label': 'Config.Token Post Args Values',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-token_post_args_values',
      'order': 0,
    },
    {
      'id': 'config-unauthorized_destroy_session',
      'model': 'config-unauthorized_destroy_session',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Unauthorized Destroy Session',
      'help': '<p>Destroy any active session for the unauthorized requests.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-unauthorized_error_message',
      'model': 'config-unauthorized_error_message',
      'type': 'input',
      'required': false,
      'label': 'Config.Unauthorized Error Message',
      'help': '<p>The error message for the unauthorized requests (when not using the redirection).</p>\n',
      'default': 'Unauthorized',
      'placeholder': 'Default: Unauthorized',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-unauthorized_redirect_uri',
      'help': '<p>Where to redirect the client on unauthorized requests.</p>\n',
      'label': 'Config.Unauthorized Redirect Uri',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-unauthorized_redirect_uri',
      'order': 0,
    },
    {
      'id': 'config-unexpected_redirect_uri',
      'help': '<p>Where to redirect the client when unexpected errors happen with the requests.</p>\n',
      'label': 'Config.Unexpected Redirect Uri',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-unexpected_redirect_uri',
      'order': 0,
    },
    {
      'id': 'config-upstream_access_token_header',
      'model': 'config-upstream_access_token_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream Access Token Header',
      'help': '<p>The upstream access token header.</p>\n',
      'default': 'authorization:bearer',
      'placeholder': 'Default: authorization:bearer',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-upstream_access_token_jwk_header',
      'model': 'config-upstream_access_token_jwk_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream Access Token Jwk Header',
      'help': '<p>The upstream access token JWK header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-upstream_headers_claims',
      'help': '<p>The upstream header claims. If multiple values are set, it means the claim is inside a nested object of the token payload.</p>\n',
      'label': 'Config.Upstream Headers Claims',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-upstream_headers_claims',
      'order': 0,
    },
    {
      'id': 'config-upstream_headers_names',
      'help': '<p>The upstream header names for the claim values.</p>\n',
      'label': 'Config.Upstream Headers Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-upstream_headers_names',
      'order': 0,
    },
    {
      'id': 'config-upstream_id_token_header',
      'model': 'config-upstream_id_token_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream Id Token Header',
      'help': '<p>The upstream id token header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-upstream_id_token_jwk_header',
      'model': 'config-upstream_id_token_jwk_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream Id Token Jwk Header',
      'help': '<p>The upstream id token JWK header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-upstream_introspection_header',
      'model': 'config-upstream_introspection_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream Introspection Header',
      'help': '<p>The upstream introspection header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-upstream_introspection_jwt_header',
      'model': 'config-upstream_introspection_jwt_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream Introspection Jwt Header',
      'help': '<p>The upstream introspection JWT header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-upstream_refresh_token_header',
      'model': 'config-upstream_refresh_token_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream Refresh Token Header',
      'help': '<p>The upstream refresh token header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-upstream_session_id_header',
      'model': 'config-upstream_session_id_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream Session Id Header',
      'help': '<p>The upstream session id header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-upstream_user_info_header',
      'model': 'config-upstream_user_info_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream User Info Header',
      'help': '<p>The upstream user info header.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-upstream_user_info_jwt_header',
      'model': 'config-upstream_user_info_jwt_header',
      'type': 'input',
      'required': false,
      'label': 'Config.Upstream User Info Jwt Header',
      'help': '<p>The upstream user info JWT header (in case the user info returns a JWT response).</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-userinfo_accept',
      'model': 'config-userinfo_accept',
      'type': 'select',
      'required': false,
      'label': 'Config.Userinfo Accept',
      'help': '<p>The value of <code>Accept</code> header for user info requests: - <code>application/json</code>: user info response as JSON - <code>application/jwt</code>: user info response as JWT (from the obsolete IETF draft document).</p>\n',
      'values': [
        'application/json',
        'application/jwt',
      ],
      'selectOptions': {
        'noneSelectedText': 'No selection...',
      },
      'default': 'application/json',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-userinfo_endpoint',
      'model': 'config-userinfo_endpoint',
      'type': 'input',
      'required': false,
      'label': 'Config.Userinfo Endpoint',
      'help': '<p>The user info endpoint. If set it overrides the value in <code>userinfo_endpoint</code> returned by the discovery endpoint.</p>\n',
      'inputType': 'text',
      'valueType': 'string',
      'order': 0,
    },
    {
      'id': 'config-userinfo_headers_client',
      'help': '<p>Extra headers passed from the client to the user info endpoint.</p>\n',
      'label': 'Config.Userinfo Headers Client',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-userinfo_headers_client',
      'order': 0,
    },
    {
      'id': 'config-userinfo_headers_names',
      'help': '<p>Extra header names passed to the user info endpoint.</p>\n',
      'label': 'Config.Userinfo Headers Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-userinfo_headers_names',
      'order': 0,
    },
    {
      'id': 'config-userinfo_headers_values',
      'help': '<p>Extra header values passed to the user info endpoint.</p>\n',
      'label': 'Config.Userinfo Headers Values',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-userinfo_headers_values',
      'order': 0,
    },
    {
      'id': 'config-userinfo_query_args_client',
      'help': '<p>Extra query arguments passed from the client to the user info endpoint.</p>\n',
      'label': 'Config.Userinfo Query Args Client',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-userinfo_query_args_client',
      'order': 0,
    },
    {
      'id': 'config-userinfo_query_args_names',
      'help': '<p>Extra query argument names passed to the user info endpoint.</p>\n',
      'label': 'Config.Userinfo Query Args Names',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-userinfo_query_args_names',
      'order': 0,
    },
    {
      'id': 'config-userinfo_query_args_values',
      'help': '<p>Extra query argument values passed to the user info endpoint.</p>\n',
      'label': 'Config.Userinfo Query Args Values',
      'inputAttributes': {
        'class': 'form-control',
        'style': {
          'minWidth': '200px',
        },
        'type': 'text',
      },
      'type': 'array',
      'valueType': 'array',
      'valueArrayType': 'array',
      'itemContainerComponent': 'FieldArrayItem',
      'fieldClasses': 'kong-form-array-field',
      'fieldItemsClasses': 'kong-form-array-field-item',
      'validator': 'array',
      'styleClasses': 'kong-form-field-wrapper',
      'newElementButtonLabel': '+ Add',
      'newElementButtonLabelClasses': 'kong-form-new-element-button-label',
      'model': 'config-userinfo_query_args_values',
      'order': 0,
    },
    {
      'id': 'config-using_pseudo_issuer',
      'model': 'config-using_pseudo_issuer',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Using Pseudo Issuer',
      'help': '<p>If the plugin uses a pseudo issuer. When set to true, the plugin will not discover the configuration from the issuer URL specified with <code>config.issuer</code>.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-verify_claims',
      'model': 'config-verify_claims',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Verify Claims',
      'help': '<p>Verify tokens for standard claims.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-verify_nonce',
      'model': 'config-verify_nonce',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Verify Nonce',
      'help': '<p>Verify nonce on authorization code flow.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-verify_parameters',
      'model': 'config-verify_parameters',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Verify Parameters',
      'help': '<p>Verify plugin configuration against discovery.</p>\n',
      'default': false,
      'valueType': 'boolean',
      'order': 0,
    },
    {
      'id': 'config-verify_signature',
      'model': 'config-verify_signature',
      'type': 'checkbox',
      'required': false,
      'label': 'Config.Verify Signature',
      'help': '<p>Verify signature of tokens.</p>\n',
      'default': true,
      'valueType': 'boolean',
      'order': 0,
    },
  ],
  _supported_redis_partial_type: 'redis-ee',
}

export const OIDCModel = {
  'name': 'openid-connect',
  'enabled': true,
  'service-id': null,
  'route-id': null,
  'protocols': [
    'grpc',
    'grpcs',
    'http',
    'https',
  ],
  'instance_name': '',
  'tags': null,
  'config-anonymous': null,
  'config-audience': null,
  'config-audience_claim': [
    'aud',
  ],
  'config-audience_required': null,
  'config-auth_methods': [
    'password',
    'client_credentials',
    'authorization_code',
    'bearer',
    'introspection',
    'userinfo',
    'kong_oauth2',
    'refresh_token',
    'session',
  ],
  'config-authenticated_groups_claim': null,
  'config-authorization_cookie_domain': null,
  'config-authorization_cookie_http_only': true,
  'config-authorization_cookie_name': 'authorization',
  'config-authorization_cookie_path': '/',
  'config-authorization_cookie_same_site': 'Default',
  'config-authorization_cookie_secure': null,
  'config-authorization_endpoint': null,
  'config-authorization_query_args_client': null,
  'config-authorization_query_args_names': null,
  'config-authorization_query_args_values': null,
  'config-authorization_rolling_timeout': 600,
  'config-bearer_token_cookie_name': null,
  'config-bearer_token_param_type': [
    'header',
    'query',
    'body',
  ],
  'config-by_username_ignore_case': false,
  'config-cache_introspection': true,
  'config-cache_token_exchange': true,
  'config-cache_tokens': true,
  'config-cache_tokens_salt': null,
  'config-cache_ttl': 3600,
  'config-cache_ttl_max': null,
  'config-cache_ttl_min': null,
  'config-cache_ttl_neg': null,
  'config-cache_ttl_resurrect': null,
  'config-cache_user_info': true,
  'config-claims_forbidden': null,
  'config-client_alg': null,
  'config-client_arg': 'client_id',
  'config-client_auth': null,
  'config-client_credentials_param_type': [
    'header',
    'query',
    'body',
  ],
  'config-client_id': null,
  'config-client_jwk': null,
  'config-client_secret': null,
  'config-cluster_cache_redis-cluster_max_redirections': 5,
  'config-cluster_cache_redis-cluster_nodes': null,
  'config-cluster_cache_redis-connect_timeout': 2000,
  'config-cluster_cache_redis-connection_is_proxied': false,
  'config-cluster_cache_redis-database': 0,
  'config-cluster_cache_redis-host': '127.0.0.1',
  'config-cluster_cache_redis-keepalive_backlog': null,
  'config-cluster_cache_redis-keepalive_pool_size': 256,
  'config-cluster_cache_redis-password': null,
  'config-cluster_cache_redis-port': 6379,
  'config-cluster_cache_redis-read_timeout': 2000,
  'config-cluster_cache_redis-send_timeout': 2000,
  'config-cluster_cache_redis-sentinel_master': null,
  'config-cluster_cache_redis-sentinel_nodes': null,
  'config-cluster_cache_redis-sentinel_password': null,
  'config-cluster_cache_redis-sentinel_role': null,
  'config-cluster_cache_redis-sentinel_username': null,
  'config-cluster_cache_redis-server_name': null,
  'config-cluster_cache_redis-ssl': false,
  'config-cluster_cache_redis-ssl_verify': false,
  'config-cluster_cache_redis-username': null,
  'config-cluster_cache_strategy': 'off',
  'config-consumer_by': [
    'username',
    'custom_id',
  ],
  'config-consumer_claim': null,
  'config-consumer_optional': false,
  'config-credential_claim': [
    'sub',
  ],
  'config-disable_session': null,
  'config-discovery_headers_names': null,
  'config-discovery_headers_values': null,
  'config-display_errors': false,
  'config-domains': null,
  'config-downstream_access_token_header': null,
  'config-downstream_access_token_jwk_header': null,
  'config-downstream_headers_claims': null,
  'config-downstream_headers_names': null,
  'config-downstream_id_token_header': null,
  'config-downstream_id_token_jwk_header': null,
  'config-downstream_introspection_header': null,
  'config-downstream_introspection_jwt_header': null,
  'config-downstream_refresh_token_header': null,
  'config-downstream_session_id_header': null,
  'config-downstream_user_info_header': null,
  'config-downstream_user_info_jwt_header': null,
  'config-dpop_proof_lifetime': 300,
  'config-dpop_use_nonce': false,
  'config-enable_hs_signatures': false,
  'config-end_session_endpoint': null,
  'config-expose_error_code': true,
  'config-extra_jwks_uris': null,
  'config-forbidden_destroy_session': true,
  'config-forbidden_error_message': 'Forbidden',
  'config-forbidden_redirect_uri': null,
  'config-groups_claim': [
    'groups',
  ],
  'config-groups_required': null,
  'config-hide_credentials': false,
  'config-http_proxy': null,
  'config-http_proxy_authorization': null,
  'config-http_version': 1.1,
  'config-https_proxy': null,
  'config-https_proxy_authorization': null,
  'config-id_token_param_name': null,
  'config-id_token_param_type': [
    'header',
    'query',
    'body',
  ],
  'config-ignore_signature': [],
  'config-introspect_jwt_tokens': false,
  'config-introspection_accept': 'application/json',
  'config-introspection_check_active': true,
  'config-introspection_endpoint': null,
  'config-introspection_endpoint_auth_method': null,
  'config-introspection_headers_client': null,
  'config-introspection_headers_names': null,
  'config-introspection_headers_values': null,
  'config-introspection_hint': 'access_token',
  'config-introspection_post_args_client': null,
  'config-introspection_post_args_client_headers': null,
  'config-introspection_post_args_names': null,
  'config-introspection_post_args_values': null,
  'config-introspection_token_param_name': 'token',
  'config-issuer': null,
  'config-issuers_allowed': null,
  'config-jwt_session_claim': 'sid',
  'config-jwt_session_cookie': null,
  'config-keepalive': true,
  'config-leeway': 0,
  'config-login_action': 'upstream',
  'config-login_methods': [
    'authorization_code',
  ],
  'config-login_redirect_mode': 'fragment',
  'config-login_redirect_uri': null,
  'config-login_tokens': [
    'id_token',
  ],
  'config-logout_methods': [
    'POST',
    'DELETE',
  ],
  'config-logout_post_arg': null,
  'config-logout_query_arg': null,
  'config-logout_redirect_uri': null,
  'config-logout_revoke': false,
  'config-logout_revoke_access_token': true,
  'config-logout_revoke_refresh_token': true,
  'config-logout_uri_suffix': null,
  'config-max_age': null,
  'config-mtls_introspection_endpoint': null,
  'config-mtls_revocation_endpoint': null,
  'config-mtls_token_endpoint': null,
  'config-no_proxy': null,
  'config-password_param_type': [
    'header',
    'query',
    'body',
  ],
  'config-preserve_query_args': false,
  'config-proof_of_possession_auth_methods_validation': true,
  'config-proof_of_possession_dpop': 'off',
  'config-proof_of_possession_mtls': 'off',
  'config-pushed_authorization_request_endpoint': null,
  'config-pushed_authorization_request_endpoint_auth_method': null,
  'config-redirect_uri': null,
  'config-redis-cluster_max_redirections': 5,
  'config-redis-cluster_nodes': null,
  'config-redis-connect_timeout': 2000,
  'config-redis-connection_is_proxied': false,
  'config-redis-database': 0,
  'config-redis-host': '127.0.0.1',
  'config-redis-keepalive_backlog': null,
  'config-redis-keepalive_pool_size': 256,
  'config-redis-password': null,
  'config-redis-port': 6379,
  'config-redis-prefix': null,
  'config-redis-read_timeout': 2000,
  'config-redis-send_timeout': 2000,
  'config-redis-sentinel_master': null,
  'config-redis-sentinel_nodes': null,
  'config-redis-sentinel_password': null,
  'config-redis-sentinel_role': null,
  'config-redis-sentinel_username': null,
  'config-redis-server_name': null,
  'config-redis-socket': null,
  'config-redis-ssl': false,
  'config-redis-ssl_verify': false,
  'config-redis-username': null,
  'config-rediscovery_lifetime': 30,
  'config-refresh_token_param_name': null,
  'config-refresh_token_param_type': [
    'header',
    'query',
    'body',
  ],
  'config-refresh_tokens': true,
  'config-require_proof_key_for_code_exchange': null,
  'config-require_pushed_authorization_requests': null,
  'config-require_signed_request_object': null,
  'config-resolve_distributed_claims': false,
  'config-response_mode': 'query',
  'config-response_type': [
    'code',
  ],
  'config-reverify': false,
  'config-revocation_endpoint': null,
  'config-revocation_endpoint_auth_method': null,
  'config-revocation_token_param_name': 'token',
  'config-roles_claim': [
    'roles',
  ],
  'config-roles_required': null,
  'config-run_on_preflight': true,
  'config-scopes': [
    'openid',
  ],
  'config-scopes_claim': [
    'scope',
  ],
  'config-scopes_required': null,
  'config-search_user_info': false,
  'config-session_absolute_timeout': 86400,
  'config-session_audience': 'default',
  'config-session_compressor': 'none',
  'config-session_cookie_domain': null,
  'config-session_cookie_http_only': true,
  'config-session_cookie_maxsize': 4000,
  'config-session_cookie_name': 'session',
  'config-session_cookie_path': '/',
  'config-session_cookie_renew': 600,
  'config-session_cookie_same_site': 'Lax',
  'config-session_cookie_secure': null,
  'config-session_enforce_same_subject': false,
  'config-session_hash_storage_key': false,
  'config-session_hash_subject': false,
  'config-session_idling_timeout': 900,
  'config-session_memcached_host': '127.0.0.1',
  'config-session_memcached_port': 11211,
  'config-session_memcached_prefix': null,
  'config-session_memcached_socket': null,
  'config-session_remember': false,
  'config-session_remember_absolute_timeout': 2592000,
  'config-session_remember_cookie_name': 'remember',
  'config-session_remember_rolling_timeout': 604800,
  'config-session_request_headers': null,
  'config-session_response_headers': null,
  'config-session_rolling_timeout': 3600,
  'config-session_secret': null,
  'config-session_storage': 'cookie',
  'config-session_store_metadata': false,
  'config-session_strategy': 'default',
  'config-ssl_verify': false,
  'config-timeout': 10000,
  'config-tls_client_auth_cert_id': null,
  'config-tls_client_auth_ssl_verify': true,
  'config-token_cache_key_include_scope': false,
  'config-token_endpoint': null,
  'config-token_endpoint_auth_method': null,
  'config-token_exchange_endpoint': null,
  'config-token_headers_client': null,
  'config-token_headers_grants': null,
  'config-token_headers_names': null,
  'config-token_headers_prefix': null,
  'config-token_headers_replay': null,
  'config-token_headers_values': null,
  'config-token_post_args_client': null,
  'config-token_post_args_names': null,
  'config-token_post_args_values': null,
  'config-unauthorized_destroy_session': true,
  'config-unauthorized_error_message': 'Unauthorized',
  'config-unauthorized_redirect_uri': null,
  'config-unexpected_redirect_uri': null,
  'config-upstream_access_token_header': 'authorization:bearer',
  'config-upstream_access_token_jwk_header': null,
  'config-upstream_headers_claims': null,
  'config-upstream_headers_names': null,
  'config-upstream_id_token_header': null,
  'config-upstream_id_token_jwk_header': null,
  'config-upstream_introspection_header': null,
  'config-upstream_introspection_jwt_header': null,
  'config-upstream_refresh_token_header': null,
  'config-upstream_session_id_header': null,
  'config-upstream_user_info_header': null,
  'config-upstream_user_info_jwt_header': null,
  'config-userinfo_accept': 'application/json',
  'config-userinfo_endpoint': null,
  'config-userinfo_headers_client': null,
  'config-userinfo_headers_names': null,
  'config-userinfo_headers_values': null,
  'config-userinfo_query_args_client': null,
  'config-userinfo_query_args_names': null,
  'config-userinfo_query_args_values': null,
  'config-using_pseudo_issuer': false,
  'config-verify_claims': true,
  'config-verify_nonce': true,
  'config-verify_parameters': false,
  'config-verify_signature': true,
}
